[{"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\index.js":"1","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\App.js":"2","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\Layout.js":"3","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\Content.js":"4","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\home\\Home.js":"5","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\notice\\Notice.js":"6","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\PageNotFound.js":"7","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\MobileMenu.js":"8","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\SlideMenu.js":"9","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\NavMenu.js":"10","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\client.js":"11","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentLink.js":"12","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentVideoGallery.js":"13","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentNews.js":"14","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentGallery.js":"15","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentCalendar.js":"16","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentContact.js":"17","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\Bottom.js":"18","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\footer\\Footer.js":"19","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookiesindex.js":"20","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\header\\Header.js":"21","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\Section.js":"22","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\config.js":"23","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookieshelpers.js":"24","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieBanner.js":"25","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieBannerContent.js":"26","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookies.js":"27","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\bannerStyle.js":"28","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieOption.js":"29","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\serviceWorkerRegistration.js":"30","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\BottomContent.js":"31","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\footer\\FooterUE.js":"32","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionText.js":"33","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNewsExternal.js":"34","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionCalendar.js":"35","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNews.js":"36","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionEventList.js":"37","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNewsletter.js":"38","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionContact.js":"39","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\event\\EventDetails.js":"40","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\event\\EventList.js":"41","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentCourse.js":"42","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\course\\CourseDetails.js":"43","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\course\\CourseList.js":"44","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\MessangerChat\\MessangeChat.js":"45","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\messangerChat\\MessangeChat.js":"46","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\calendar\\Calendar.js":"47","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\TopNavUE.js":"48","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\news\\NewsDetails.js":"49","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\news\\NewsList.js":"50"},{"size":734,"mtime":1606925912161,"results":"51","hashOfConfig":"52"},{"size":2153,"mtime":1607418670837,"results":"53","hashOfConfig":"52"},{"size":4927,"mtime":1607695760757,"results":"54","hashOfConfig":"52"},{"size":4155,"mtime":1614763412493,"results":"55","hashOfConfig":"52"},{"size":3409,"mtime":1607695466370,"results":"56","hashOfConfig":"52"},{"size":2878,"mtime":1603895989673,"results":"57","hashOfConfig":"52"},{"size":1570,"mtime":1607418596510,"results":"58","hashOfConfig":"52"},{"size":8749,"mtime":1607696086444,"results":"59","hashOfConfig":"52"},{"size":3533,"mtime":1607695961513,"results":"60","hashOfConfig":"52"},{"size":4951,"mtime":1607695783255,"results":"61","hashOfConfig":"52"},{"size":1747,"mtime":1643141664583,"results":"62","hashOfConfig":"52"},{"size":554,"mtime":1607706323098,"results":"63","hashOfConfig":"52"},{"size":1312,"mtime":1603916044450,"results":"64","hashOfConfig":"52"},{"size":1070,"mtime":1614763046005,"results":"65","hashOfConfig":"52"},{"size":1297,"mtime":1603915471609,"results":"66","hashOfConfig":"52"},{"size":1167,"mtime":1614763479666,"results":"67","hashOfConfig":"52"},{"size":1297,"mtime":1603916076866,"results":"68","hashOfConfig":"52"},{"size":1133,"mtime":1607445446329,"results":"69","hashOfConfig":"52"},{"size":2490,"mtime":1606997310012,"results":"70","hashOfConfig":"52"},{"size":276,"mtime":1602158957556,"results":"71","hashOfConfig":"52"},{"size":3015,"mtime":1613606881213,"results":"72","hashOfConfig":"52"},{"size":6837,"mtime":1615218758662,"results":"73","hashOfConfig":"52"},{"size":698,"mtime":1643141957820,"results":"74","hashOfConfig":"52"},{"size":344,"mtime":1587895748130,"results":"75","hashOfConfig":"52"},{"size":6285,"mtime":1603875784932,"results":"76","hashOfConfig":"52"},{"size":3747,"mtime":1587901750083,"results":"77","hashOfConfig":"52"},{"size":532,"mtime":1587896192404,"results":"78","hashOfConfig":"52"},{"size":1942,"mtime":1587903431071,"results":"79","hashOfConfig":"52"},{"size":1218,"mtime":1603875065806,"results":"80","hashOfConfig":"52"},{"size":5064,"mtime":499162500000,"results":"81","hashOfConfig":"52"},{"size":630,"mtime":1606989962540,"results":"82","hashOfConfig":"52"},{"size":1328,"mtime":1607690715495,"results":"83","hashOfConfig":"52"},{"size":626,"mtime":1607003317844,"results":"84","hashOfConfig":"52"},{"size":4340,"mtime":1643118693461,"results":"85","hashOfConfig":"52"},{"size":1268,"mtime":1608566904214,"results":"86","hashOfConfig":"52"},{"size":2993,"mtime":1624001368976,"results":"87","hashOfConfig":"52"},{"size":3948,"mtime":1608567155300,"results":"88","hashOfConfig":"52"},{"size":644,"mtime":1607003311867,"results":"89","hashOfConfig":"52"},{"size":635,"mtime":1607003251665,"results":"90","hashOfConfig":"52"},{"size":6062,"mtime":1607705804049,"results":"91","hashOfConfig":"52"},{"size":4894,"mtime":1608566679608,"results":"92","hashOfConfig":"52"},{"size":1193,"mtime":1607445678478,"results":"93","hashOfConfig":"52"},{"size":3338,"mtime":1607697995073,"results":"94","hashOfConfig":"52"},{"size":3802,"mtime":1607698011672,"results":"95","hashOfConfig":"52"},{"size":6939,"mtime":1607451730579,"results":"96","hashOfConfig":"97"},{"size":6939,"mtime":1607451730579,"results":"98","hashOfConfig":"52"},{"size":3415,"mtime":1624001266965,"results":"99","hashOfConfig":"52"},{"size":899,"mtime":1607695019457,"results":"100","hashOfConfig":"52"},{"size":2253,"mtime":1614763714634,"results":"101","hashOfConfig":"52"},{"size":5816,"mtime":1624001979811,"results":"102","hashOfConfig":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"nch8k6",{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"105"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"119","usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"105"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"125","usedDeprecatedRules":"105"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"105"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"136","usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"145","usedDeprecatedRules":"105"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"148","usedDeprecatedRules":"105"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"151","usedDeprecatedRules":"105"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"154","usedDeprecatedRules":"105"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"105"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"160","usedDeprecatedRules":"105"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"105"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"105"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"171","usedDeprecatedRules":"105"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"105"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"179","usedDeprecatedRules":"105"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"105"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"105"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"105"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"105"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"105"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"105"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"105"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"105"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"105"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"105"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"105"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"105"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"105"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"105"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4ury96",{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"105"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"105"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"105"},"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\index.js",[],["243","244"],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\App.js",["245","246"],"import React, { useEffect  } from 'react';\n\nimport { Layout } from './components/Layout';\nimport { Home } from './components/home/Home';\nimport { Content } from './components/content/Content';\nimport { Notice } from './components/notice/Notice';\nimport { PageNotFound } from './components/shared/PageNotFound';\nimport ReactGA from 'react-ga';\n\nimport './custom.css'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useLocation \n} from 'react-router-dom'\n\n//ReactGA.initialize('UA-60440167-3');\n//ReactGA.pageview(window.location.pathname + window.location.search)\n\n//const history = createBrowserHistory();\n//history.listen(location => {\n//    ReactGA.set({ page: location.pathname });\n//    ReactGA.pageview(location.pathname);\n//});\n\nexport default function  App()  {\n\n  const { pathname, hash } = useLocation()\n\n  useEffect(() => {\n    // if not a hash link scroll to top\n    if (hash === '') {\n        window.scrollTo(0, 0)\n    }\n    // else scroll to id\n    else {\n        setTimeout(\n            () => {\n                const id = hash.replace('#', '');\n                const element = document.getElementById(id);\n                var headerOffset = 180;\n                if (element) {\n                    //element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                    var elementPosition = element.getBoundingClientRect().top;\n                    var offsetPosition = elementPosition - headerOffset;\n\n                    window.scrollTo({\n                        top: offsetPosition,\n                        behavior: \"smooth\"\n                    });\n                }\n            },\n            1000\n        );\n    }\n}, [pathname]) // do this on route change\n\n  return (\n    <Router>\n      <Layout path={pathname}>\n          <Switch>        \n              <Route path=\"/notice/:url\" exact component={Notice}  />\n              <Route path=\"/:url/:mode/:itemurl\" exact component={Content} />\n              <Route path=\"/:url\" exact component={Content} />\n              <Route path=\"/\" exact component={Home}/>\n              <Route component={PageNotFound} />\n          </Switch>\n      </Layout>\n    </Router>\n  );\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\Layout.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\Content.js",["247","248"],"import React, { Component } from \"react\";\r\n//import ContentText from './ContentText'\r\nimport ContentLink from \"./ContentLink\";\r\nimport ContentNews from \"./ContentNews\";\r\nimport ContentCalendar from \"./ContentCalendar\";\r\nimport ContentGallery from \"./ContentGallery\";\r\nimport ContentVideoGallery from \"./ContentVideoGallery\";\r\nimport ContentContact from \"./ContentContact\";\r\nimport ContentCourse from \"./ContentCourse\";\r\nimport Section from \"../section/Section\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./content.css\";\r\nimport Bottom from \"../shared/Bottom\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { clientConnect } from \"../../client\";\r\n\r\nexport class Content extends Component {\r\n  static displayName = Content.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: [],\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props.match.params;\r\n    this.populatePageData(url);\r\n\r\n    //document.getElementById(\"root\").style.backgroundImage = `url(${process.env.PUBLIC_URL + '/images/bcgkNormal.jpg'})`;\r\n    //document.getElementById(\"root\").style.backgroundPosition = 'top center';\r\n    //document.getElementById(\"root\").style.backgroundRepeat = 'no-repeat';\r\n  }\r\n\r\n  static renderPage(page, url) {\r\n    return (\r\n      <React.Fragment>\r\n        {page.sectionOrder === true &&\r\n          url.mode === undefined &&\r\n          page.sections.map((sections) => <Section key={sections.hash} sections={sections} id={sections.hash} />)}\r\n\r\n        {page.module === \"link\" && <ContentLink content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"news\" && <ContentNews content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"calendar\" && <ContentCalendar content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"gallery\" && <ContentGallery content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"video-gallery\" && <ContentVideoGallery content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"contact\" && <ContentContact content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.module === \"custom-course\" && <ContentCourse content={page.content} baseUrl={url} title={page.title} />}\r\n\r\n        {page.sectionOrder === false &&\r\n          url.mode === undefined &&\r\n          page.sections.map((sections) => <Section key={sections.hash} sections={sections} id={sections.hash} />)}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  static renderBottom(page) {\r\n    return (\r\n      <React.Fragment>\r\n        <Bottom bottoms={page.bottoms} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  static renderMetatags(page) {\r\n    return (\r\n      <Helmet>\r\n        <title>{page.metaTitle}</title>\r\n        <meta name=\"description\" content={page.metaDescription} />\r\n        <meta name=\"keywords\" content={page.metaKeywords} />\r\n        <meta name=\"robots\" content={page.metaRobots} />\r\n        <meta name=\"theme-color\" content=\"#1f1f1f\" />\r\n        <meta property=\"og:url\" content=\"https://www.regiony-lewiatan.pl/\" />\r\n        <meta property=\"og:type\" content=\"image/png\" />\r\n        <meta property=\"og:title\" content={page.metaTitle} />\r\n        <meta property=\"og:description\" content={page.metaDesc} />\r\n        <meta property=\"og:image\" content=\"https://www.regiony-lewiatan.pl/images/logo.png\" />\r\n      </Helmet>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let content = this.state.loading ? <p className=\"text-center\">Loading...</p> : Content.renderPage(this.state.page, this.props.match.params);\r\n\r\n    let bottoms = this.state.loading ? <p className=\"text-center\">Loading...</p> : Content.renderBottom(this.state.page);\r\n\r\n    let metatags = this.state.loading ? \"\" : Content.renderMetatags(this.state.page);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {metatags}\r\n\r\n        {content}\r\n\r\n        {bottoms}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  async populatePageData(url) {\r\n    this.setState({ page: await clientConnect(\"api/page/get\", url), loading: false });\r\n  }\r\n}\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\home\\Home.js",["249","250","251","252","253"],"import React, { Component } from 'react';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nimport Section from '../section/Section';\r\nimport Bottom from '../shared/Bottom';\r\nimport Header from '../header/Header';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\n//import {accessToken, siteId, apiUrl } from '../../config';\r\n\r\nimport { clientConnect } from '../../client';\r\nimport { Container, Row } from 'reactstrap';\r\n\r\nexport class Home extends Component {\r\n    static displayName = Home.name;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            homes: [], site: [], loading: true, loadingSite: true, nodes: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateHomeData();\r\n        this.populateSiteData();\r\n    }\r\n\r\n    static renderSections(homes) {\r\n        return (\r\n            <React.Fragment>\r\n            {homes.sections.map(sections =>\r\n                <Section key={sections.hash} sections={sections} />\r\n            )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    static renderBottom(homes) {\r\n        return (\r\n            <Bottom bottoms={homes.bottoms} />\r\n        );\r\n    }\r\n\r\n    static renderMetatags(homes) {\r\n        return (\r\n            <Helmet>\r\n                <title>{homes.metatagTitle}</title>\r\n                <meta name=\"description\" content={homes.metatagDesc} />\r\n                <meta name=\"keywords\" content={homes.metatagKeywords} />\r\n                <meta name=\"robots\" content={homes.metatagRobots} />\r\n                <meta name=\"theme-color\" content=\"#ffffff\" />\r\n                <meta property=\"og:url\" content=\"https://www.regiony-lewiatan.pl/\" />\r\n                <meta property=\"og:type\" content=\"image/png\" />\r\n                <meta property=\"og:title\" content={homes.metatagTitle} />\r\n                <meta property=\"og:description\" content={homes.metatagDesc} />\r\n                <meta property=\"og:image\" content=\"https://www.regiony-lewiatan.pl/images/logo.png\" />\r\n            </Helmet>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        let sections = this.state.loading\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : Home.renderSections(this.state.homes)\r\n\r\n        let bottoms = this.state.loading\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : Home.renderBottom(this.state.homes)\r\n\r\n        let metatags = this.state.loading\r\n            ? \"\"\r\n            : Home.renderMetatags(this.state.homes)\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {metatags}\r\n\r\n            <Container>\r\n                <Header />\r\n            </Container>\r\n\r\n            {sections}\r\n\r\n            {bottoms}\r\n            \r\n        </React.Fragment>\r\n    );\r\n    }\r\n\r\n    async populateHomeData() {\r\n        /*const response = await fetch(apiUrl + 'api/home/' + siteId,\r\n        {    \r\n            headers: \r\n                {   \r\n                'X-BBCMS-TOKEN': accessToken\r\n            }\r\n            \r\n        });\r\n        const data = await response.json();\r\n        this.setState({ homes: data, sections: data.sectionList.sectionHash , loading: false });\r\n        */\r\n       this.setState({ homes: await clientConnect('api/home', null), loading: false });\r\n    }\r\n\r\n    async populateSiteData() {\r\n       this.setState({ site: await clientConnect('api/site', null), loadingSite: false });\r\n    }\r\n}\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\notice\\Notice.js",["254","255","256","257","258","259"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Bottom from '../shared/Bottom';\r\nimport { Container } from 'reactstrap';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nexport class Notice extends Component {\r\n\r\n    static displayName = Notice.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notice: [], loading: true\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { url } = this.props.match.params;\r\n        this.populateNoticeData(url);\r\n\r\n        document.getElementById(\"root\").style.backgroundImage = `url(${process.env.PUBLIC_URL + '/images/bcgkNormal.jpg'})`;\r\n        document.getElementById(\"root\").style.backgroundPosition = 'top center';\r\n        document.getElementById(\"root\").style.backgroundRepeat = 'no-repeat';\r\n    }\r\n\r\n    static renderNotice(notice) {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <div class=\"col-lg-12 col-md-12 text-page-content\">\r\n                    {(notice.noticeTitle != null) &&\r\n                        <React.Fragment>\r\n                        <h1 className=\"text-page-header\">{notice.noticeTitle}</h1>\r\n                            <div className=\"title-page-divider\"></div>\r\n                        </React.Fragment>\r\n                    }\r\n\r\n                    {ReactHtmlParser(notice.noticeContent)}\r\n\r\n                    {(notice.noticeShowdate == true) &&\r\n                        <p class=\"small\">Data aktualizacji:\r\n                    {new Intl.DateTimeFormat(\"pl-PL\", {\r\n                            year: \"numeric\",\r\n                            month: \"long\",\r\n                            day: \"2-digit\"\r\n                        }).format(notice.noticeDate)}\r\n                        </p>\r\n                    }\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    static renderBottom(bottom) {\r\n        return (\r\n            <React.Fragment>\r\n                    <Bottom bottoms={bottom} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let notice = this.state.loading\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : Notice.renderNotice(this.state.notice.noticeItem)\r\n\r\n        let bottoms = this.state.loading\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : Notice.renderBottom(this.state.notice.bottomItem)\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Container>\r\n                    {notice}\r\n                </Container>\r\n\r\n                {bottoms}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    async populateNoticeData(url) {\r\n        this.setState({ notice: await clientConnect('api/notice/get', url), loading: false });\r\n    }\r\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\PageNotFound.js",["260"],"import React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n//import {accessToken, siteId, apiUrl } from '../../config';\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nexport class PageNotFound extends Component {\r\n\r\n    static displayName = PageNotFound.name;\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            site: [], loadingSite: true\r\n        };\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        this.populateSiteData();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row justify-content-md-center\" style={{ marginTop: '30px' }}>\r\n                    <div className=\"col-md-10 text-center\">\r\n                        <h1>Błąd</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-md-center\" style={{ marginTop: '0px' }}>\r\n                    <div className=\"col-md-10 text-center\">\r\n                        <p style={{ fontSize: \"88px\", fontWeight:\"900\" }}>404</p>\r\n                        <p style={{ marginTop: '30px', marginBottom: '30px' }}>\r\n                        </p>\r\n                        <p style={{ marginTop: '30px' }}>Przyktro nam, ale poszukiwana strona nie została znaleziona, wróć do <a href=\"/\">strony głównej</a></p>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    async populateSiteData() {\r\n        this.setState({ site: await clientConnect('api/site', null), loadingSite: false });\r\n    }\r\n}\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\MobileMenu.js",["261","262","263","264","265","266","267","268","269"],"﻿import React, { Component, Fragment } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu'\r\nimport { Link as ScrollLink, animateScroll as scroll } from 'react-scroll'\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport {accessToken, siteId, apiUrl } from '../../config';\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nimport './SlideMenu.css'\r\nimport './NavMenu.css'\r\n\r\nlet mainColor = '#ffffff';\r\n\r\nexport class MobileMenu extends Component {\r\n    static displayName = MobileMenu.name;\r\n    \r\n\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            mainMenus: [],\r\n            secondaryMenus: [],\r\n            loadingMain: true,\r\n            loadingSecondary: true,\r\n            menuOpen: false,\r\n            color: 'transparent'\r\n        };\r\n    }\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 100) {\r\n            this.setState({ color: mainColor })\r\n        }\r\n        else {\r\n            this.setState({ color: 'transparent' })\r\n        }\r\n    }\r\n\r\n    sendData = () => {\r\n        this.props.slideMenuCallback(this.state.menuOpen);\r\n    }\r\n\r\n    // This keeps your state in sync with the opening/closing of the menu\r\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n    handleStateChange(state) {\r\n        this.setState({ menuOpen: state.isOpen }, this.sendData)\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    closeMenu() {\r\n        this.setState({ menuOpen: false })\r\n    }\r\n\r\n    // This can be used to toggle the menu, e.g. when using a custom icon\r\n    // Tip: You probably want to hide either/both default icons if using a custom icon\r\n    // See https://github.com/negomi/react-burger-menu#custom-icons\r\n    toggleMenu() {\r\n        this.setState(state => ({ menuOpen: !state.menuOpen }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateSecondaryMenuData();\r\n        this.populateMainMenuData();\r\n        window.addEventListener('scroll', this.listenScrollEvent)\r\n    }\r\n\r\n\r\n    renderLink(item) {\r\n        switch (item.miModule) {\r\n            case 'text':\r\n                return <a key={item.id} id={item.miUrl} className=\"bm-item menu-item\" href={`/${item.miUrl}`}>{item.miTitle}</a>;\r\n            default:\r\n              return 'foo';\r\n          }\r\n        }\r\n\r\n\r\n    // static renderMenu(navMenus) {\r\n\r\n    //     return (\r\n    //         <React.Fragment>\r\n    //             {navMenus.length > 0 &&\r\n    //                 <React.Fragment>\r\n    //                     {navMenus.menuList[0].map((menuItem, i) =>\r\n    //                     <div key={i}>\r\n    //                         {menuItem.miModule.includes(\"section\") ?\r\n    //                             <ScrollLink\r\n    //                                 to={menuItem.url}\r\n    //                                 spy={true}\r\n    //                                 smooth={true}\r\n    //                                 duration={500}\r\n    //                                 offset={-180}\r\n    //                                 className=\"bm-item menu-item\">{menuItem.title}</ScrollLink>\r\n    //                             :\r\n    //                             <a key={i} id={menuItem.url} className=\"bm-item menu-item\" href={menuItem.url}>{menuItem.title}</a>\r\n    //                         }\r\n    //                     </div>\r\n    //             )}\r\n    //                 </React.Fragment>\r\n    //             }       \r\n    //         </React.Fragment>\r\n    //     );\r\n    // }\r\n\r\n    static renderSecondaryMenu(slideMenus) {\r\n        return (\r\n            <React.Fragment>\r\n                {slideMenus.length > 0 && \r\n                <React.Fragment>\r\n                    {slideMenus.map((slideMenuItem, i) => {\r\n                    switch (slideMenuItem.module) {\r\n                        case 'text':\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                        case 'link':\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                        default:\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                    }    \r\n                })\r\n                }\r\n                </React.Fragment>\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const mainMenu = this.state.loadingMain\r\n            ? <p className=\"text-center\"></p>\r\n            : this.state.mainMenus.menuList[0]\r\n\r\n        let secondaryMenu = this.state.loadingSecondary\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : MobileMenu.renderSecondaryMenu(this.state.secondaryMenus)\r\n\r\n        //const { mainMenu } = this.state.mainMenus;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Menu right customBurgerIcon={false} customCrossIcon={<i className=\"fa fa-times\"></i>} isOpen={this.state.menuOpen} onStateChange={(state) => this.handleStateChange(state)} width={'350px'} top={'0'}> \r\n                    {!this.state.loadingMain && \r\n                        mainMenu.menu.map((menuItem, i) =>\r\n                        <div key={i} >\r\n                            {menuItem.module.includes(\"section\") ?\r\n                                <React.Fragment>\r\n                                    {this.props.path === \"/\"?\r\n                                    <ScrollLink\r\n                                    onClick={() => this.toggleMenu()}\r\n                                    to={menuItem.url}\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    offset={-180}\r\n                                    className=\"bm-item menu-item\">{menuItem.title}</ScrollLink>\r\n                                    :\r\n                                    <a key={i} id={menuItem.url} className=\"bm-item menu-item\" href={`/#${menuItem.url}`}>{menuItem.title}</a>\r\n                                }\r\n                                </React.Fragment>       \r\n                                :\r\n                                <a key={i} id={menuItem.url} className=\"bm-item menu-item\" href={menuItem.url}>{menuItem.title}</a>\r\n                            }\r\n                        </div>\r\n                    )}\r\n                    <hr />\r\n                    {this.state.secondaryMenus.length > 0 &&\r\n                    <Fragment>\r\n                    {secondaryMenu}\r\n                    <hr/>\r\n                    </Fragment>\r\n                    }\r\n                    <div style={{marginTop:\"20px\", textAlign:\"center\"}}>\r\n                        {//<a className=\"bm-item menu-item-small\" href=\"#\"><i className=\"fa fa-user\"></i> Konto</a>\r\n                        }\r\n                    </div>\r\n                </Menu>\r\n\r\n                    <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white mb-3\" dark fixed=\"top\" style={{ borderBottom: \"2px solid #051E38\", backgroundColor: mainColor, top: global.window.scrollY > 30 ? 0 : 60 }}>\r\n                        <Container>\r\n                            <NavbarBrand href=\"/\"><img src={process.env.PUBLIC_URL + '/images/logo_transp.png'} alt=\"Lewiatian Regionalna Platforma Dialogu\" /></NavbarBrand>\r\n                           \r\n                            <div className=\"col col-md-2 col-sm-2 text-right\">\r\n                                <button onClick={() => this.toggleMenu()} className=\"menu-button\"><i className=\"fa fa-bars\"></i></button>\r\n                            </div>\r\n                        </Container>\r\n                    </Navbar>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    async populateMainMenuData() {\r\n        /*const response = await fetch('api/menu/main');\r\n        const data = await response.json();\r\n        this.setState({ mainMenus: data, loading: false });*/\r\n        this.setState({ mainMenus: await clientConnect('api/menu/get', '8aa5745f-4109-450b-9882-e2ec5b3f2954'), loadingMain: false });\r\n    }\r\n\r\n    async populateSecondaryMenuData() {\r\n        /*const response = await fetch('api/menu/secondary');\r\n        const data = await response.json();\r\n        this.setState({ secondaryMenus: data, loadingSecondary: false });*/\r\n        this.setState({ secondaryMenus: await clientConnect('api/menu/get', null), loadingSecondary: false });\r\n    }\r\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\SlideMenu.js",["270"],"﻿import React, { Component } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu'\r\n\r\nimport './SlideMenu.css'\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nexport class SlideMenu extends Component {\r\n    showSettings(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            slideMenus: [],\r\n            loading: true,\r\n            menuOpen: false\r\n        }\r\n    }\r\n\r\n    sendData = () => {\r\n        this.props.slideMenuCallback(this.state.menuOpen);\r\n    }\r\n\r\n    // This keeps your state in sync with the opening/closing of the menu\r\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n    handleStateChange(state) {\r\n        this.setState({ menuOpen: state.isOpen }, this.sendData)\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    closeMenu() {\r\n        this.setState({ menuOpen: false })\r\n    }\r\n\r\n    // This can be used to toggle the menu, e.g. when using a custom icon\r\n    // Tip: You probably want to hide either/both default icons if using a custom icon\r\n    // See https://github.com/negomi/react-burger-menu#custom-icons\r\n    toggleMenu() {\r\n        this.setState(state => ({ menuOpen: !state.menuOpen }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateSlideMenuData();\r\n    }\r\n\r\n\r\n    // renderLink(item) {\r\n    //     switch (item.module) {\r\n    //         case 'text':\r\n    //             return <a key={item.id} id={item.miUrl} className=\"bm-item menu-item\" href={`/${item.miUrl}`}>{item.miTitle}</a>;\r\n    //         default:\r\n    //           return 'foo';\r\n    //       }\r\n    //     }\r\n\r\n\r\n    static renderSlideMenu(slidemenus) {\r\n        return (\r\n            <React.Fragment>\r\n                {slidemenus.menuList[0].menu.map((slideMenuItem, i) => {\r\n                    switch (slideMenuItem.miModule) {\r\n                        case 'text':\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                        case 'link':\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                        default:\r\n                            return <a key={i} id={slideMenuItem.url} className=\"bm-item menu-item\" href={`/${slideMenuItem.url}`}>{slideMenuItem.title}</a>\r\n                    }\r\n                }\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        let secondaryMenu = this.state.loading\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : SlideMenu.renderSlideMenu(this.state.slideMenus)\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Menu right customBurgerIcon={false} customCrossIcon={<i className=\"fa fa-times\"></i>} isOpen={this.props.menuOpen} onStateChange={(state) => this.handleStateChange(state)} width={'350px'} style={{top:\"0\"}}>\r\n                    {secondaryMenu}\r\n                </Menu>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    async populateSlideMenuData() {\r\n        /*const response = await fetch('api/menu/secondary');\r\n        const data = await response.json();\r\n        this.setState({ secondaryMenus: data, loading: false });*/\r\n        this.setState({ slideMenus: await clientConnect('api/menu/get', '8aa5745f-4109-450b-9882-e2ec5b3f2954'), loading: false });\r\n    }\r\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\NavMenu.js",["271","272","273","274","275"],"import React, { Component, Fragment } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\nimport { Link as ScrollLink, animateScroll as scroll } from 'react-scroll'\r\nimport TopNavEU from './TopNavUE'\r\n//const ScrollLink = Scroll.ScrollLink\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\n    let mainColor = '#ffffff';\r\n\r\nexport class NavMenu extends Component {\r\n\r\n    static displayName = NavMenu.name;\r\n\r\n    constructor (props) {\r\n        super();\r\n\r\n        this.state = {\r\n            collapsed: true,\r\n            menus: [],\r\n            loading: true,\r\n            menuOpen: props.menuOpen,\r\n            color: 'transparent'\r\n        };\r\n\r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    }\r\n\r\n\r\n    listenScrollEvent = e => {\r\n        if (window.scrollY > 30) {\r\n            this.setState({ color: mainColor })\r\n        }\r\n        else {\r\n            this.setState({ color: 'transparent' })\r\n        }\r\n    }\r\n\r\n    sendData = () => {\r\n        this.props.navMenuCallback(this.state.menuOpen);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateMenuData();\r\n        window.addEventListener('scroll', this.listenScrollEvent)\r\n    }\r\n\r\n\r\n    toggleNavbar () {\r\n    this.setState({\r\n        collapsed: !this.state.collapsed\r\n    });\r\n    }\r\n\r\n    // routeChange=()=> {\r\n    //let path = `newPath`;\r\n    //let history = useHistory();\r\n    //history.push(path);\r\n    //}\r\n\r\n    static renderMenu(menus) {\r\n        return (\r\n            <React.Fragment>\r\n                {menus.menuList.length > 0 &&\r\n                <ul className=\"navbar-nav flex-grow w-100 justify-content-center nav-fill\">\r\n                    {menus.menuList[0].menu.map((menuItem, i) =>\r\n                        <NavItem key={i}>\r\n                            {menuItem.module.includes(\"section\") ?\r\n                                <React.Fragment>\r\n                                {this.props.path == \"/\" ?\r\n                                    <ScrollLink\r\n                                    to={menuItem.url}\r\n                                    spy={true}\r\n                                    smooth={true}\r\n                                    duration={500}\r\n                                    offset={-180}\r\n                                    className=\"text-blue nav-link nav-link-coursor\">{menuItem.title}</ScrollLink>\r\n                                    :\r\n                                    <NavLink href={`/#${menuItem.url}`} className=\"text-blue\">{menuItem.title}</NavLink>\r\n                                }    \r\n                                </React.Fragment>\r\n                                :\r\n                                <NavLink className=\"text-blue\" href={menuItem.url}>{menuItem.title}</NavLink>\r\n                            } \r\n                        </NavItem>\r\n                    )}\r\n                </ul>\r\n                }\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }\r\n\r\n    toggleMenu() {\r\n        if (this.state.menuOpen !== this.props.menuOpen) {\r\n            this.setState(state => ({ menuOpen: !this.props.menuOpen }), this.sendData)\r\n        } else {\r\n            this.setState(state => ({ menuOpen: !state.menuOpen }), this.sendData)\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n    let mainMenu = this.state.loading\r\n        ? <div></div>\r\n        : NavMenu.renderMenu(this.state.menus)\r\n\r\n    return (\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white\" dark fixed=\"top\" style={{ borderBottom: \"2px solid #051E38\", backgroundColor: mainColor, top: global.window.scrollY > 30 ? 0 : 60 }}>\r\n            <Container>\r\n                <div className=\"col-md-2\">\r\n                <NavbarBrand href=\"/\"><img src={process.env.PUBLIC_URL + '/images/logo_transp.png'} alt = \"Lewiatan - Regionalna Platforma Dialogu\" /></NavbarBrand>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n                <Collapse className=\"d-sm-inline-flex\" isOpen={!this.state.collapsed} navbar>       \r\n                    {mainMenu}          \r\n                </Collapse>\r\n                </div>\r\n                <div className=\"col-md-2 col-sm-3 text-center\" >\r\n                    {//<a className=\"nav-link text-blue\" href=\"#\" target=\"_blank\"><i className=\"fa fa-user text-grey\"></i>&nbsp;&nbsp;Konto</a> \r\n                    }\r\n                </div>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n    }\r\n\r\n    async populateMenuData() {\r\n        /*const response = await fetch('api/menu/main');\r\n        const data = await response.json();\r\n        this.setState({ menus: data, loading: false });*/\r\n        this.setState({ menus: await clientConnect('api/menu/get', '8aa5745f-4109-450b-9882-e2ec5b3f2954'), loading: false });\r\n    }\r\n\r\n}\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\client.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentLink.js",["276","277"],"﻿import React, { Component } from \"react\";\r\n\r\nexport class ContentLink extends Component {\r\n    constructor(props) {\r\n        super();\r\n    }\r\n    componentWillMount() {\r\n        if(this.props.content != \"\")\r\n        {\r\n            window.location = this.props.content;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{marginTop:\"20px\", marginBottom:\"20px\", padding:\"50px\"}}>\r\n                <section><p className=\"text-center\">Przekierowuję...</p></section>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default ContentLink;","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentVideoGallery.js",["278","279","280","281","282"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class ContentVideoGallery extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div class=\"col-lg-12 col-md-12 text-page-content\">\r\n                {(this.props.content.contentTitle != null) &&\r\n                    <React.Fragment>\r\n                    <h1 className=\"text-page-header\">{this.props.content.contentTitle}</h1>\r\n                    <div className=\"title-page-divider\"></div>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {ReactHtmlParser(ReactHtmlParser(this.props.content.contentContent))}\r\n\r\n                {(this.props.content.contentShowdate == true) &&\r\n                    <p class=\"small\">Data aktualizacji:\r\n                    {new Intl.DateTimeFormat(\"pl-PL\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\"\r\n                    }).format(this.props.content.contentDate)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContentVideoGallery.propTypes = {\r\n    content: PropTypes.object\r\n}\r\n\r\nexport default ContentVideoGallery\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentNews.js",["283","284","285","286","287"],"﻿import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport NewsDetails from \"../news/NewsDetails\";\r\nimport NewsList from \"../news/NewsList\";\r\n\r\nexport class ContentNews extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\" style={{ marginBottom: \"30px\" }}>\r\n          <div className=\"col-lg-12 col-md-12 text-page-content\">\r\n            {(() => {\r\n              switch (this.props.baseUrl.mode) {\r\n                case \"news\":\r\n                  return <NewsDetails news={this.props.baseUrl.itemurl} baseUrl={this.props.baseUrl} />;\r\n                default:\r\n                  return <NewsList baseUrl={this.props.baseUrl} content={this.props.content} title={this.props.title} />;\r\n              }\r\n            })()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContentNews.propTypes = {\r\n  content: PropTypes.object,\r\n};\r\n\r\nexport default ContentNews;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentGallery.js",["288","289","290","291","292"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class ContentGallery extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div class=\"col-lg-12 col-md-12 text-page-content\">\r\n                {(this.props.content.contentTitle != null) &&\r\n                    <React.Fragment>\r\n                    <h1 className=\"text-page-header\">{this.props.content.contentTitle}</h1>\r\n                    <div className=\"title-page-divider\"></div>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {ReactHtmlParser(ReactHtmlParser(this.props.content.contentContent))}\r\n\r\n                {(this.props.content.contentShowdate == true) &&\r\n                    <p class=\"small\">Data aktualizacji:\r\n                    {new Intl.DateTimeFormat(\"pl-PL\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\"\r\n                    }).format(this.props.content.contentDate)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContentGallery.propTypes = {\r\n    content: PropTypes.object\r\n}\r\n\r\nexport default ContentGallery\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentCalendar.js",["293","294","295","296","297"],"﻿import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport EventDetails from \"../event/EventDetails\";\r\nimport EventList from \"../event/EventList\";\r\n\r\nexport class ContentCalendar extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"row\" style={{ marginBottom: \"30px\" }}>\r\n            <div className=\"col-lg-12 col-md-12 text-page-content\">\r\n              {(() => {\r\n                switch (this.props.baseUrl.mode) {\r\n                  case \"event\":\r\n                    return <EventDetails event={this.props.baseUrl.itemurl} baseUrl={this.props.baseUrl} />;\r\n                  default:\r\n                    return <EventList baseUrl={this.props.baseUrl} content={this.props.content} title={this.props.title} />;\r\n                }\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContentCalendar.propTypes = {\r\n  content: PropTypes.object,\r\n};\r\n\r\nexport default ContentCalendar;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentContact.js",["298","299","300","301","302"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class ContentContact extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div class=\"col-lg-12 col-md-12 text-page-content\">\r\n                {(this.props.content.contentTitle != null) &&\r\n                    <React.Fragment>\r\n                    <h1 className=\"text-page-header\">{this.props.content.contentTitle}</h1>\r\n                    <div className=\"title-page-divider\"></div>\r\n                    </React.Fragment>\r\n                }\r\n\r\n                {ReactHtmlParser(ReactHtmlParser(this.props.content.contentContent))}\r\n\r\n                {(this.props.content.contentShowdate == true) &&\r\n                    <p class=\"small\">Data aktualizacji:\r\n                    {new Intl.DateTimeFormat(\"pl-PL\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\"\r\n                    }).format(this.props.content.contentDate)}\r\n                    </p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContentContact.propTypes = {\r\n    content: PropTypes.object\r\n}\r\n\r\nexport default ContentContact\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\Bottom.js",["303","304","305","306","307"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport BottomContent from './BottomContent';\r\n\r\nexport class Bottom extends Component {\r\n\r\n    styleSection = (margintop, marginbottom) => {\r\n        return {\r\n            marginTop: `${margintop}px`,\r\n            marginBottom: `${marginbottom}px`,\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                \r\n            <div className=\"bottomSection\" style={this.styleSection(this.props.bottoms.marginTop, this.props.bottoms.marginBottom)}>\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"row\">\r\n                        {this.props.bottoms.bottomContents.map((bottomContent) => \r\n                            <BottomContent bottomContent={bottomContent} key={bottomContent.hash}/>\r\n                        )}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nBottom.propTypes = {\r\n    bottomcontent: PropTypes.array\r\n}\r\n\r\nexport default Bottom\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\footer\\Footer.js",["308","309","310"],"import React, { Component } from 'react';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport './footer.css'\r\nimport FooterUE from './FooterUE'\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nclass Footer extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            footers: [],\r\n            notices: [],\r\n            loadingFooters: true,\r\n            loadingNotices: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateFooterData();\r\n        this.populateNoticeData();\r\n    }\r\n\r\n    static renderNoticeList(notices) {\r\n        return (\r\n            <React.Fragment>\r\n                {notices.length > 0 &&\r\n                <React.Fragment>{notices.map((notice, i) =>\r\n                    <React.Fragment key={i}>\r\n                        <span> |</span> <a href={`/notice/${notice.noticeUrl}`}>{notice.noticeTitle}</a>\r\n                    </React.Fragment>\r\n                    )}\r\n                </React.Fragment>\r\n                }\r\n            </React.Fragment>       \r\n        );\r\n    }\r\n\r\n    static renderFooter(footers, notices) {\r\n\r\n        let noticeList = Footer.renderNoticeList(notices)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    \r\n                    <div className=\"col-md-7 text-right xs-text-center order-md-5\">{ReactHtmlParser(footers.right)} <p>{noticeList}</p></div>\r\n                    <div className=\"col-md-5 xs-text-center\" >{ReactHtmlParser(footers.left)}</div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        let footer = (this.state.loadingNotices && this.state.loadingFooters)\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : Footer.renderFooter(this.state.footers, this.state.notices)\r\n\r\n        return (\r\n\r\n            <footer className=\"footer\" id=\"footer\">\r\n                <div className=\"addressFooter notice\">\r\n                    {footer}\r\n                    <FooterUE />\r\n                </div>\r\n            </footer>\r\n\r\n        );\r\n    }\r\n\r\n    async populateFooterData() {\r\n        this.setState({ footers: await clientConnect('api/footer', null), loadingFooters: false });\r\n    }\r\n\r\n    async populateNoticeData() {\r\n        this.setState({ notices: await clientConnect('api/notice/list', null), loadingNotices: false });\r\n    }\r\n\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookiesindex.js",["311"],"﻿import React from 'react';\r\nimport CookieBanner from './components/CookieBanner';\r\nimport { isServer } from './Cookieshelpers';\r\n\r\nconst CookieBannerUniversal = props => (isServer() ? null : <CookieBanner {...props} />);\r\n\r\nexport { CookieBannerUniversal as CookieBanner };","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\header\\Header.js",["312","313"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Carousel, CarouselItem, CarouselControl, CarouselIndicators, CarouselCaption } from \"reactstrap\";\r\n\r\nimport { clientConnect } from \"../../client\";\r\n\r\nfunction Header(props) {\r\n  // const items = [\r\n  //   {\r\n  //     hash: \"92D67077-B987-45A2-90F4-8B54B6A5E6DD\",\r\n  //     altText: \"Slide 1\",\r\n  //   },\r\n  //   {\r\n  //     hash: \"200B6CAF-E670-4C38-8D4D-0F3019ADB26D\",\r\n  //     altText: \"Slide 1\",\r\n  //   },\r\n  //   {\r\n  //     hash: \"6AD1A827-694B-48E2-A97A-3EA40EECF2A4\",\r\n  //     altText: \"Slide 1\",\r\n  //   },\r\n  // ];\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      return await clientConnect(\"api/mainslider/list\", null);\r\n    }\r\n    fetchData()\r\n      .then((response) => setItems(response))\r\n      .finally(() => setIsLoading(false));\r\n  }, []);\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  };\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  // const slides = (items, isLoading) => {\r\n  //   if(isLoading) {\r\n\r\n  //   }\r\n  //   else\r\n  //   {\r\n  //   items.map((item,i) => {\r\n  //   return (\r\n  //     <CarouselItem\r\n  //       onExiting={() => setAnimating(true)}\r\n  //       onExited={() => setAnimating(false)}\r\n  //       key={i}\r\n  //     >\r\n  //       <img src={item.src} className=\"d-block w-100\"/>\r\n  //       <div class=\"carousel-caption d-none d-md-block\">\r\n  //         <h5>Third slide label</h5>\r\n  //         <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n  //       </div>\r\n  //     </CarouselItem>\r\n  //     )}\r\n  //   );\r\n  //   }\r\n  // };\r\n\r\n  const slides = items.map((item, i) => {\r\n    return (\r\n      <CarouselItem onExiting={() => setAnimating(true)} onExited={() => setAnimating(false)} key={i}>\r\n        <img src={`https://cdn.bluebirdcms.net/imageasset/get/${item.imageAssetHash}`} alt={item.altText} />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      {isLoading ? (\r\n        <div>Loading ...</div>\r\n      ) : (\r\n        <Fragment>\r\n          {items.length > 0 && (\r\n            <div className=\"margin-t-3\">\r\n              <Carousel activeIndex={activeIndex} next={next} previous={previous}>\r\n                <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n                {slides}\r\n              </Carousel>\r\n            </div>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\Section.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334"],"import React, { Component } from \"react\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport SectionText from \"./SectionText\";\r\nimport SectionNews from \"./SectionNews\";\r\nimport SectionNewsExternal from \"./SectionNewsExternal\";\r\nimport SectionEventList from \"./SectionEventList\";\r\nimport SectionCalendar from \"./SectionCalendar\";\r\nimport SectionNewsletter from \"./SectionNewsletter\";\r\nimport SectionContact from \"./SectionContact\";\r\nimport { Element } from \"react-scroll\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport class Section extends Component {\r\n  styleSection = (background, margintop, marginbottom) => {\r\n    return {\r\n      backgroundColor: background,\r\n      marginTop: `${margintop}px`,\r\n      marginBottom: `${marginbottom}px`,\r\n      padding: \"30px\",\r\n    };\r\n  };\r\n\r\n  rowStyles = () => {\r\n    return {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"20px\",\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Element id={this.props.sections.hash} name={this.props.sections.hash}>\r\n          {this.props.sections.inContainer === true ? (\r\n            <Container>\r\n              <section\r\n                style={this.styleSection(this.props.sections.background, this.props.sections.marginTop, this.props.sections.marginBottom)}\r\n                className=\"content-section\"\r\n                key={this.props.sections.hash}\r\n              >\r\n                {this.props.sections.title != null && this.props.sections.titleShow === true && (\r\n                  <React.Fragment>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 xs-text-center\">\r\n                        <div className=\"h1\" style={{ textAlign: \"center\" }}>\r\n                          {this.props.sections.title}\r\n                        </div>\r\n                        <div className=\"title-page-divider\">&nbsp;</div>\r\n                      </div>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n                <div className=\"row mt-3\">\r\n                  {this.props.sections.sectionContents.map((sectionContent) =>\r\n                    (() => {\r\n                      switch (sectionContent.type) {\r\n                        case \"text\":\r\n                          return <SectionText sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"news\":\r\n                          return <SectionNews sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"news-external\":\r\n                          return <SectionNewsExternal sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"event-list\":\r\n                          return <SectionEventList sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"calendar\":\r\n                          return <SectionCalendar sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"newsletter\":\r\n                          return <SectionNewsletter sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        case \"contact\":\r\n                          return <SectionContact sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                        default:\r\n                          return <SectionText sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                          break;\r\n                      }\r\n                    })()\r\n                  )}\r\n                </div>\r\n              </section>\r\n            </Container>\r\n          ) : (\r\n            <React.Fragment>\r\n              <section\r\n                style={this.styleSection(this.props.sections.background, this.props.sections.marginTop, this.props.sections.marginBottom)}\r\n                className=\"content-section\"\r\n                key={this.props.sections.hash}\r\n              >\r\n                <Container>\r\n                  {this.props.sections.title != null && this.props.sections.titleShow == true && (\r\n                    <React.Fragment>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 xs-text-center\">\r\n                          <div className=\"h1\" style={{ textAlign: \"center\" }}>\r\n                            {this.props.sections.title}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </React.Fragment>\r\n                  )}\r\n                  <div className=\"row\">\r\n                    {this.props.sections.sectionContents.map((sectionContent) =>\r\n                      (() => {\r\n                        switch (sectionContent.type) {\r\n                          case \"text\":\r\n                            return <SectionText sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"news\":\r\n                            return <SectionNews sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"news-external\":\r\n                            return <SectionNewsExternal sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"event-list\":\r\n                            return <SectionEventList sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"calendar\":\r\n                            return <SectionCalendar sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"newsletter\":\r\n                            return <SectionNewsletter sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          case \"contact\":\r\n                            return <SectionContact sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                          default:\r\n                            return <SectionText sectionContent={sectionContent} key={sectionContent.hash} />;\r\n                            break;\r\n                        }\r\n                      })()\r\n                    )}\r\n                  </div>\r\n                </Container>\r\n              </section>\r\n            </React.Fragment>\r\n          )}\r\n        </Element>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\config.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookieshelpers.js",["335"],"﻿const getExpirationDate = (date = null, expiringDays = 365) => {\r\n    const expireDate = date ? new Date(date) : new Date();\r\n    expireDate.setTime(expireDate.getTime() + (expiringDays * 24 * 60 * 60 * 1000));\r\n    return expireDate;\r\n};\r\n\r\nconst isServer = () => typeof navigator === 'undefined';\r\n\r\nexport { getExpirationDate, isServer };","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieBanner.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieBannerContent.js",["336"],"import React from 'react';\nimport CookieOption from './CookieOption';\nimport bannerStyle from './bannerStyle';\n\nexport default (props = {}) => {\n  const {\n    styles = {},\n    className = '',\n    message = 'No text',\n    policyLink = '/#',\n    privacyPolicyLinkText = 'Privacy Policy',\n    necessaryOptionText = 'Necessary',\n    preferencesOptionText = 'Preferences',\n    statisticsOptionText = 'Statistics',\n    marketingOptionText = 'Marketing',\n    showDeclineButton = false,\n    acceptButtonText = 'Accept',\n    declineButtonText = 'Decline',\n    showPreferencesOption = true,\n    showStatisticsOption = true,\n    showMarketingOption = true,\n    listTitle = '',\n    onTogglePreferencesCookies = Function,\n    onToggleStatisticsCookies = Function,\n    onToggleMarketingCookies = Function,\n    onDecline = Function,\n    onConfirm = Function,\n  } = props;\n\n  const {\n    dialog: dialogStyle,\n    container: containerStyle,\n    message: messageStyle,\n    policy: policyStyle,\n    selectPane: selectPaneStyle,\n    optionWrapper: optionWrapperStyle,\n    optionLabel: optionLabelStyle,\n    checkbox: checkboxStyle,\n    buttonWrapper: buttonWrapperStyle,\n    button: buttonStyle,\n    listTitleLabel: listTitleLabelStyle\n  } = { ...bannerStyle, ...styles };\n\n  const cookieOptionStyle = { optionWrapperStyle, optionLabelStyle, checkboxStyle };\n\n  return (\n    <div className={`react-cookie-law-dialog ${className}`} style={dialogStyle}>\n      <div className=\"react-cookie-law-container\" style={containerStyle}>\n        <div className=\"react-cookie-law-msg\" style={messageStyle}>{message} <a href={policyLink} className=\"react-cookie-law-policy\" style={policyStyle}>{privacyPolicyLinkText}</a>. </div>\n\n        <div className=\"react-cookie-law-select-pane\" style={selectPaneStyle}>\n\n                  <div className=\"react-cookie-law-option-wrapper\" style={optionWrapperStyle}>\n                      <span style={listTitleLabelStyle}>{listTitle}</span>\n                  </div>\n\n          <CookieOption\n            id=\"check-required-cookies\"\n            text={necessaryOptionText}\n            styles={cookieOptionStyle}\n            disabled\n            checked\n          />\n\n          {\n            showPreferencesOption && (\n              <CookieOption\n                id=\"check-preferences-cookies\"\n                text={preferencesOptionText}\n                styles={cookieOptionStyle}\n                onChange={onTogglePreferencesCookies}\n                checked\n              />\n            )\n          }\n\n          {\n            showStatisticsOption && (\n              <CookieOption\n                id=\"check-statistics-cookies\"\n                text={statisticsOptionText}\n                styles={cookieOptionStyle}\n                onChange={onToggleStatisticsCookies}\n                checked\n              />\n            )\n          }\n\n          {\n            showMarketingOption && (\n              <CookieOption\n                id=\"check-marketing-cookies\"\n                text={marketingOptionText}\n                styles={cookieOptionStyle}\n                onChange={onToggleMarketingCookies}\n              />\n            )\n          }\n        </div>\n\n        <div className=\"react-cookie-law-button-wrapper\" style={buttonWrapperStyle}>\n          {\n            showDeclineButton && (\n              <button type=\"button\" className=\"react-cookie-law-decline-btn\" style={buttonStyle} onClick={() => onDecline()}>\n                <span>{declineButtonText}</span>\n              </button>\n            )\n          }\n\n          <button type=\"button\" className=\"react-cookie-law-accept-btn\" style={buttonStyle} onClick={() => onConfirm()}>\n            <span>{acceptButtonText}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\Cookies.js",["337"],"﻿import { Cookies as ReactCookies } from 'react-cookie';\r\nimport { getExpirationDate } from './Cookieshelpers';\r\n\r\nexport default class Cookies {\r\n    constructor() {\r\n        this.cookies = new ReactCookies();\r\n    }\r\n\r\n    get(cookie) {\r\n        return this.cookies.get(cookie);\r\n    }\r\n\r\n    set(cookie, cookieExpiration) {\r\n        this.cookies.set(cookie, true, {\r\n            expires: cookieExpiration || getExpirationDate(),\r\n        });\r\n    }\r\n\r\n    remove(cookie) {\r\n        return this.cookies.remove(cookie);\r\n    }\r\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\bannerStyle.js",["338"],"export default {\n  dialog: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    right: '0',\n    zIndex: '100000',\n    backgroundColor: '#FFFFE0',\n    padding: '10px',\n  },\n  container: {\n    maxWidth: '960px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    overflow: 'hidden',\n  },\n  message: {\n    minHeight: '32px',\n    fontSize: '12px',\n    fontWeight: '400',\n    lineHeight: '130%',\n    padding: '10px 0',\n    color: '#000000',\n  },\n  policy: {\n    fontSize: '12px',\n    color: '#203872',\n    textDecoration: 'underline',\n  },\n  selectPane: {\n    display: 'table-cell',\n    padding: '3px 0px 10px 0px',\n  },\n  optionWrapper: {\n    display: 'inline-block',\n    position: 'relative',\n    marginRight: '7px',\n    marginLeft: '\"0px',\n    float: 'left',\n  },\n  optionLabel: {\n    height: 'auto',\n    width: 'auto',\n    minHeight: '14px',\n    fontSize: '12px',\n    color: '#333',\n    display: 'inline-block',\n    padding: '1px 0 0 20px',\n    position: 'relative',\n    top: '0',\n    left: '0',\n    zIndex: '1',\n    cursor: 'default',\n    verticalAlign: 'top',\n    },\n  listTitleLabel: {\n    height: 'auto',\n    width: 'auto',\n    minHeight: '14px',\n    fontSize: '12px',\n    color: '#333',\n    display: 'inline-block',\n    padding: '1px 0 0 0',\n    position: 'relative',\n    top: '0',\n    left: '0',\n    zIndex: '1',\n    cursor: 'default',\n    verticalAlign: 'top',\n  },\n  checkbox: {\n    position: 'absolute',\n    top: '4px',\n    left: '0',\n    width: '14px',\n    height: '14px',\n    zIndex: '2',\n    cursor: 'pointer',\n  },\n  buttonWrapper: {\n    float: 'right',\n  },\n  button: {\n    display: 'inline-block',\n    backgroundColor: '#203872',\n    padding: '7px 15px',\n    minWidth: '80px',\n    color: '#ffffff',\n    textDecoration: 'none',\n    fontSize: '14px',\n    fontWeight: '400',\n    marginRight: '5px',\n    marginLeft: '5px',\n    textAlign: 'center',\n    whiteSpace: 'nowrap',\n    cursor: 'pointer',\n    border: 'none',\n  },\n};\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\cookies\\components\\CookieOption.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\BottomContent.js",["339","340","341","342"],"﻿import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class BottomContent extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`col-lg-${this.props.bottomContent.widthInColumns} col-md-${this.props.bottomContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.bottomContent.content)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nBottomContent.propTypes = {\r\n    bottomcontent: PropTypes.object\r\n}\r\n\r\nexport default BottomContent\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\footer\\FooterUE.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionText.js",["343","344","345"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class SectionText extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.sectionContent.content)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSectionText.propTypes = {\r\n    sectioncontents: PropTypes.object\r\n}\r\n\r\nexport default SectionText\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNewsExternal.js",["346","347","348","349","350","351"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport { clientConnectLewiatan } from \"../../client\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport class SectionNewsExternal extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      news: [\r\n        //     {\r\n        //         title: 'Lewiatan apeluje o zawarcie paktu społecznego',\r\n        //         url: 'http://konfederacjalewiatan.pl/aktualnosci/2020/1/_lewiatan_apeluje_o_zawarcie_paktu_spolecznego',\r\n        //         newsShowDate: true,\r\n        //         newsDate: '2020-12-21'\r\n        //     },\r\n        //     {\r\n        //         title: 'Konsultacje',\r\n        //         url: 'http://konfederacjalewiatan.pl/aktualnosci/2020/1/konsultacje',\r\n        //         newsShowDate: true,\r\n        //         newsDate: '2020-12-21'\r\n        //     },\r\n        //     {\r\n        //         title: 'Sprzedaż detaliczna spętana obostrzeniami w handlu',\r\n        //         url: 'http://konfederacjalewiatan.pl/aktualnosci/2020/1/sprzedaz_detaliczna_spetana_obostrzeniami_w_handlu',\r\n        //         newsShowDate: true,\r\n        //         newsDate: '2020-12-21'\r\n        //     },\r\n        //     {\r\n        //         title: 'Wkrótce ruszą konsultacje społeczne Krajowego Planu Odbudowy',\r\n        //         url: 'http://konfederacjalewiatan.pl/aktualnosci/2020/1/wkrotce_rusza_konsultacje_spoleczne_krajowego_planu_odbudowy',\r\n        //         newsShowDate: true,\r\n        //         newsDate: '2020-12-18'\r\n        //     },\r\n        //     {\r\n        //         title: 'Europejski Komitet Ekonomiczno-Społeczny ruszył do pracy',\r\n        //         url: 'http://konfederacjalewiatan.pl/aktualnosci/2020/1/europejski_komitet_ekonomicznospoleczny_ruszyl_do_pracy',\r\n        //         newsShowDate: true,\r\n        //         newsDate: '2020-12-17'\r\n        //     }\r\n      ],\r\n      loadingNews: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateNewsData();\r\n  }\r\n\r\n  styleSection = (background) => {\r\n    return {\r\n      backgroundColor: background,\r\n    };\r\n  };\r\n\r\n  rowStyles = () => {\r\n    return {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"20px\",\r\n    };\r\n  };\r\n\r\n  static renderNews(news) {\r\n    let url = \"news\";\r\n\r\n    return (\r\n      <div className=\"news-list\">\r\n        {news.map((news, i) => (\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              borderBottom: \"1px solid #051E38\",\r\n              paddingTop: \"15px\",\r\n              paddingBottom: \"15px\",\r\n            }}\r\n            key={i}\r\n          >\r\n            <div className=\"col-md-11\">\r\n              <a href={news.url} target=\"_blank\" className=\"text-blue\">\r\n                <h3 className=\"news-title\">{news.title}</h3>\r\n              </a>\r\n              {ReactHtmlParser(ReactHtmlParser(news.abstract))}\r\n              {news.newsShowDate && (\r\n                <p>\r\n                  Data publikacji: <Moment format=\"DD.MM.YYYY\">{news.newsDate}</Moment>\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"col-md-1\">\r\n              <p>\r\n                <a href={news.url} target=\"_blank\" className=\"text-blue\">\r\n                  <i className=\"fas fa-arrow-alt-circle-right fa-2x\"></i>\r\n                </a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let newsList = this.state.loadingNews ? <p className=\"text-center\">Loading...</p> : SectionNewsExternal.renderNews(this.state.news);\r\n\r\n    return (\r\n      <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n        {ReactHtmlParser(this.props.sectionContent.content)}\r\n        <div className=\"margin-b-1\"></div>\r\n        {newsList}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateNewsData() {\r\n    this.setState({\r\n      news: await clientConnectLewiatan(\"api/news/list\", `?channel=6e01b015-f0e1-4ed8-8a5c-647c561880f8&showdate=true&showcontent=false&page=0&items=5`),\r\n      loadingNews: false,\r\n    });\r\n  }\r\n}\r\n\r\nSectionNewsExternal.propTypes = {\r\n  sectioncontents: PropTypes.object,\r\n};\r\n\r\nexport default SectionNewsExternal;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionCalendar.js",["352","353","354","355"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport Calendar from '../calendar/Calendar';\r\n\r\nexport class SectionCalendar extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            events: [], loadingEvents: true\r\n        };\r\n    }\r\n\r\n    omponentDidMount() {\r\n        this.populateEventsData(this.props.section.contentContentSecondary);\r\n    }\r\n\r\n    styleSection = (background) => {\r\n        return {\r\n            backgroundColor: background\r\n        }\r\n\r\n    }\r\n\r\n    rowStyles = () => {\r\n        return {\r\n            marginTop: '20px',\r\n            marginBottom: '20px',\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let url = \"kalendarz\";\r\n\r\n        return (\r\n            <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.sectionContent.content)}\r\n\r\n                <Calendar />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSectionCalendar.propTypes = {\r\n    sectioncontents: PropTypes.object\r\n}\r\n\r\nexport default SectionCalendar\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNews.js",["356","357","358"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport { clientConnect } from \"../../client\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport class SectionNews extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      news: [],\r\n      loadingNews: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateNewsData(\"pl-PL\", this.props.sectionContent.contentSecondary, 3);\r\n  }\r\n\r\n  styleSection = (background) => {\r\n    return {\r\n      backgroundColor: background,\r\n    };\r\n  };\r\n\r\n  rowStyles = () => {\r\n    return {\r\n      marginTop: \"20px\",\r\n      marginBottom: \"20px\",\r\n    };\r\n  };\r\n\r\n  static renderNews(news) {\r\n    let url = \"aktualnosci\";\r\n    let colsNum = 12 / news.length;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col-md-12\">\r\n            {news.length > 0 ? (\r\n              <div className=\"row\">\r\n                {news.map((news, i) => (\r\n                  <div className={`col-md-${colsNum} news-slice`}>\r\n                    <h3>{news.title}</h3>\r\n                    {ReactHtmlParser(news.abstract)}\r\n                    {news.newsShowDate && (\r\n                      <p className=\"small\">\r\n                        Data publikacji: <Moment format=\"DD.MM.YYYY\">{news.newsDate}</Moment>\r\n                      </p>\r\n                    )}\r\n                    <p style={{ marginBottom: \"0px\" }}>\r\n                      <a href={`/${url}/news/${news.url}`} className=\"btn btn-default\">\r\n                        czytaj więcej...\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <Fragment>\r\n                <p className=\"text-center\" style={{ fontSize: \"52px\" }}>{`{...}`}</p>\r\n                <p className=\"text-center\">brak aktualności</p>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let newsList = this.state.loadingNews ? <p className=\"text-center\">Loading...</p> : SectionNews.renderNews(this.state.news);\r\n\r\n    return (\r\n      <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n        {ReactHtmlParser(this.props.sectionContent.content)}\r\n\r\n        {newsList}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateNewsData(lng, url, itemsNum) {\r\n    if (url) {\r\n      this.setState({ news: await clientConnect(\"api/news/categorylist\", `${lng}/${url}/0/${itemsNum}`), loadingNews: false });\r\n    } else {\r\n      this.setState({ news: await clientConnect(\"api/news/list\", `${lng}/0/${itemsNum}`), loadingNews: false });\r\n    }\r\n  }\r\n}\r\n\r\nSectionNews.propTypes = {\r\n  sectioncontents: PropTypes.object,\r\n};\r\n\r\nexport default SectionNews;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionEventList.js",["359","360","361"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport Moment from 'react-moment';\r\n\r\nimport { clientConnect } from '../../client';\r\n\r\nexport class SectionEventList extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            events: [], loadingEvents: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.sectionContent.contentSecondary)\r\n        {\r\n            this.populateEventsData();\r\n        }\r\n        else\r\n        {\r\n            this.populateEventsData(this.props.sectionContent.contentSecondary);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.sectionContent.content)}\r\n\r\n\r\n                {(!this.state.loadingEvents) ? \r\n                <div className=\"mt-4\">\r\n                {this.state.events.length > 0 ?\r\n                    this.state.events.map((event, i) =>           \r\n                        <Fragment>\r\n                        <div style={{borderBottom:\"1px solid #051E38\", paddingTop:\"15px\", paddingBottom:\"15px\"}} key={i}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <h3>{event.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <p><i className=\"fas fa-clock\"></i> <strong>Początek:</strong> <Moment format=\"DD.MM.YYYY\">{event.dateStart}</Moment> godz. <Moment format=\"HH:mm\">{event.dateStart}</Moment><br/>\r\n                                    {event.isOnline === true ?\r\n                                    <span>\r\n                                        <i className=\"fas fa-globe\"></i> <strong>Spotkanie online</strong>\r\n                                    </span>\r\n                                    :\r\n                                    <span>\r\n                                        <i className=\"fas fa-location-arrow\"></i> <strong>Miejsce:</strong> {event.place}, {event.city}\r\n                                    </span>\r\n                                    }\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <a href={`/${this.props.baseUrl.url}/event/${event.url}`} className=\"btn btn-secondary\">zobacz więcej...</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </Fragment>\r\n                    )\r\n                    :\r\n                    <Fragment>\r\n                        <p className=\"text-center\" style={{fontSize:\"52px\"}}>{`{...}`}</p>\r\n                        <p className=\"text-center\">brak nadchodzących wydarzeń</p>\r\n                    </Fragment>\r\n                }\r\n                </div>\r\n                :\r\n                <p className=\"text-center\">Loading...</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async populateEventsData(url) {\r\n        if(url)\r\n        {\r\n            this.setState({ events: await clientConnect('api/event/categorylist', url), loadingEvents: false });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ events: await clientConnect('api/event/list', url), loadingEvents: false });\r\n        }\r\n    }\r\n}\r\n\r\nSectionEventList.propTypes = {\r\n    sectioncontents: PropTypes.object\r\n}\r\n\r\nexport default SectionEventList\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionNewsletter.js",["362","363","364"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class SectionNewsletter extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.sectionContent.content)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSectionNewsletter.propTypes = {\r\n    sectioncontents: PropTypes.object\r\n}\r\n\r\nexport default SectionNewsletter\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\section\\SectionContact.js",["365","366","367"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\n\r\nexport class SectionContact extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`col-lg-${this.props.sectionContent.widthInColumns} col-md-${this.props.sectionContent.widthInColumns} xs-text-center`}>\r\n                {ReactHtmlParser(this.props.sectionContent.content)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSectionContact.propTypes = {\r\n    sectioncontents: PropTypes.object\r\n}\r\n\r\nexport default SectionContact\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\event\\EventDetails.js",["368","369","370","371","372"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { clientConnect } from '../../client';\r\nimport {Gmaps, Marker, InfoWindow, Circle} from 'react-gmaps'\r\nimport Moment from 'react-moment';\r\n\r\nconst params = {v: '3.exp', key: ''};\r\n\r\nexport class EventDetails extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            event: [], loadingEvent: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateEventData(this.props.event);\r\n    }\r\n\r\n    onMapCreated(map) {\r\n        map.setOptions({\r\n          disableDefaultUI: true\r\n        });\r\n      }\r\n    \r\n      onDragEnd(e) {\r\n        console.log('onDragEnd', e);\r\n      }\r\n    \r\n      onCloseClick() {\r\n        console.log('onCloseClick');\r\n      }\r\n    \r\n      onClick(e) {\r\n        console.log('onClick', e);\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style={{marginTop:\"20px\", marginBottom:\"20px\", paddingTop:\"30px\"}}>\r\n                    {!this.state.loadingEvent ?\r\n                    <Fragment>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 xs-text-center\">\r\n                                <div className=\"h1\" style={{ textAlign: \"center\" }}>{this.state.event.title}</div>\r\n                                <div className=\"title-page-divider\">&nbsp;</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row margin-t-3\">\r\n                            <div className=\"col-md-12\">\r\n                            {ReactHtmlParser(this.state.event.description)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row justify-content-md-center margin-t-3\">\r\n                            <div className=\"offset-md-2 col-md-4\">\r\n                                <p><i className=\"fas fa-clock\"></i> <strong>Początek:</strong>  <Moment format=\"DD.MM.YYYY\">{this.state.event.dateStart}</Moment> godz. <Moment format=\"HH:mm\">{this.state.event.dateStart}</Moment></p>\r\n                            </div>\r\n                            <div className=\"offset-md-2 col-md-4\">\r\n                                <p><i className=\"fas fa-clock\"></i> <strong>Koniec:</strong> <Moment format=\"DD.MM.YYYY\">{this.state.event.dateEnd}</Moment> godz. <Moment format=\"HH:mm\">{this.state.event.dateEnd}</Moment></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"offset-md-2 col-md-8\">\r\n                                {this.state.event.isOnline === true ?\r\n                                <p><i className=\"fas fa-globe\"></i> <strong>Spotkanie online</strong> </p>\r\n                                :\r\n                                <p><i className=\"fas fa-location-arrow\"></i> <strong>Miejsce:</strong> {this.state.event.place} {this.state.event.address} {this.state.event.zip}, {this.state.event.city}</p>\r\n                                }\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        {this.state.event.isRegistration ===true && \r\n                        <div className=\"row margin-t-3\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <a href=\"#\" className=\"btn btn-primary\">REJESTRACJA</a>\r\n                            </div>\r\n                        </div>\r\n                        }\r\n                        \r\n                        {this.state.event.isOnline === false &&\r\n                        \r\n                        <Fragment>\r\n                        <div style={{borderBottom:\"1px solid #051E38\", paddingTop:\"15px\", paddingBottom:\"15px\", marginBottom:\"20px\"}}></div>\r\n                        <h3 style={{marginBottom:\"20px\"}} className=\"text-center\">Mapa</h3>\r\n                        <Gmaps\r\n                            width={'100%'}\r\n                            height={'400px'}\r\n                            lat={this.state.event.lat}\r\n                            lng={this.state.event.lon}\r\n                            zoom={16}\r\n                            loadingMessage={'Loading'}\r\n                            params={params}\r\n                            onMapCreated={this.onMapCreated}>\r\n                            <Marker\r\n                            lat={this.state.event.lat}\r\n                            lng={this.state.event.log}\r\n                            draggable={true}\r\n                            onDragEnd={this.onDragEnd} />\r\n                            <InfoWindow\r\n                            lat={this.state.event.lat}\r\n                            lng={this.state.event.lng}\r\n                            content={this.state.event.place}\r\n                            onCloseClick={this.onCloseClick} />\r\n                            <Circle\r\n                            lat={this.state.event.lat}\r\n                            lng={this.state.event.lng}\r\n                            radius={500}\r\n                            onClick={this.onClick} />\r\n                        </Gmaps>\r\n                        </Fragment>\r\n                        }\r\n                        \r\n                        <div style={{paddingTop:\"15px\", paddingBottom:\"15px\", margin:\"20px\"}} className=\"text-center\">\r\n                            <a href={`/${this.props.baseUrl.url}`}>wróć do listy szkoleń</a>\r\n                        </div>\r\n                    </Fragment>\r\n                    :\r\n                    <p className=\"text-center\">Loading...</p>\r\n                    }    \r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    async populateEventData(url) {\r\n        this.setState({ event: await clientConnect('api/event/get', url), loadingEvent: false });\r\n    }\r\n}\r\n\r\nexport default EventDetails","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\event\\EventList.js",["373","374","375","376","377"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { clientConnect } from '../../client';\r\nimport Moment from 'react-moment';\r\nimport Calendar from '../calendar/Calendar';\r\n\r\nexport class EventList extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            events: [], loadingEvents: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.content)\r\n        {\r\n            this.populateEventsData();\r\n        }\r\n        else\r\n        {\r\n            this.populateEventsData(this.props.content);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <div style={{marginTop:\"20px\", marginBottom:\"20px\", paddingTop:\"30px\"}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 xs-text-center\">\r\n                        <div className=\"h1\" style={{ textAlign: \"center\" }}>{this.props.title}</div>\r\n                        <div className=\"title-page-divider\">&nbsp;</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <Calendar showMonthName={true} size=\"large\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-md-6\">\r\n                        <Calendar showMonthName={true} size=\"small\" monthOffset=\"1\" />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <Calendar showMonthName={true} size=\"small\" monthOffset=\"2\" />\r\n                    </div>\r\n                </div>\r\n\r\n                {(!this.state.loadingEvents) ? \r\n                <div className=\"mt-4\">\r\n                <div style={{marginTop:\"40px\"}}></div>\r\n                <div className=\"h1\">Nadchodzące wydarzenia</div>\r\n                <div className=\"title-page-divider\">&nbsp;</div>\r\n                {this.state.events.length > 0 ?\r\n                    this.state.events.map((event, i) =>           \r\n                        <Fragment>\r\n                        <div style={{borderBottom:\"1px solid #051E38\", paddingTop:\"15px\", paddingBottom:\"15px\"}} key={i}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <h3>{event.title}</h3>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <p><i className=\"fas fa-clock\"></i> <strong>Początek:</strong> <Moment format=\"DD.MM.YYYY\">{event.dateStart}</Moment> godz. <Moment format=\"HH:mm\">{event.dateStart}</Moment><br/>\r\n                                    {event.isOnline === true ?\r\n                                    <span>\r\n                                        <i className=\"fas fa-globe\"></i> <strong>Spotkanie online</strong>\r\n                                    </span>\r\n                                    :\r\n                                    <span>\r\n                                        <i className=\"fas fa-location-arrow\"></i> <strong>Miejsce:</strong> {event.place}, {event.city}\r\n                                    </span>\r\n                                    }\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <a href={`/${this.props.baseUrl.url}/event/${event.url}`} className=\"btn btn-secondary\">zobacz więcej...</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </Fragment>\r\n                    )\r\n                    :\r\n                    <Fragment>\r\n                        <p className=\"text-center\" style={{fontSize:\"52px\"}}>{`{...}`}</p>\r\n                        <p className=\"text-center\">brak nadchodzących wydarzeń</p>\r\n                    </Fragment>\r\n                }\r\n                </div>\r\n                :\r\n                <p className=\"text-center\">Loading...</p>\r\n                }\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    async populateEventsData(url) {\r\n        if(url)\r\n        {\r\n            this.setState({ events: await clientConnect('api/event/categorylist', url), loadingEvents: false });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ events: await clientConnect('api/event/list', url), loadingEvents: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventList","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\content\\ContentCourse.js",["378","379","380","381"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport CourseDetails from '../course/CourseDetails';\r\nimport CourseList from '../course/CourseList';\r\n\r\n\r\nexport class ContentCourse extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n            <div className=\"row\" style={{marginBottom:\"30px\"}}>\r\n            <div className=\"col-lg-12 col-md-12 text-page-content\">\r\n        \r\n                {(() => {\r\n                    switch (this.props.baseUrl.mode) {\r\n                        case 'course':\r\n                            return <CourseDetails course={this.props.baseUrl.itemurl} baseUrl={this.props.baseUrl} />\r\n                        default:\r\n                            return <CourseList baseUrl={this.props.baseUrl} content={this.props.content} title={this.props.title} />\r\n                    }\r\n                })()}\r\n\r\n\r\n            </div>\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nContentCourse.propTypes = {\r\n    content: PropTypes.object\r\n}\r\n\r\nexport default ContentCourse\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\course\\CourseDetails.js",["382","383","384","385","386"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { clientConnectCustom } from '../../client';\r\nimport { Collapse, CardBody, Card, CardHeader } from 'reactstrap';\r\n\r\nexport class CourseDetails extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            course: [], loadingCourse: true, collapse: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateCourseData(\"78b86d1a-dc0d-4fe3-ad87-cc29deec3b45\", this.props.course);\r\n    }\r\n\r\n    toggle(e) {\r\n        let event = e.target.dataset.event;\r\n        this.setState({ collapse: this.state.collapse === event ? 0 : event });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { collapse } = this.state;\r\n        const  modules  = this.state.course.modules;\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={{marginTop:\"20px\", marginBottom:\"20px\", paddingTop:\"30px\"}}>\r\n                {!this.state.loadingCourse ?\r\n                <Fragment>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 xs-text-center\">\r\n                            <div className=\"h1\" style={{ textAlign: \"center\" }}>{this.state.course.title}</div>\r\n                            <div className=\"title-page-divider\">&nbsp;</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row margin-t-3\">\r\n                        <div className=\"col-md-12\">\r\n                        {ReactHtmlParser(this.state.course.description)}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {modules.length > 0 &&\r\n\r\n                    <div className=\"modulesaccordion\">\r\n                            {modules.map((module) =>\r\n                                <Card key={module.hash}>\r\n                                    <CardHeader onClick={this.toggle} data-event={module.hash} className={collapse == module.hash ? 'collapsed' : ''} >\r\n                                        {module.title}\r\n                                    </CardHeader>\r\n                                    <Collapse isOpen={collapse === module.hash}>\r\n                                        <CardBody>\r\n                                            {ReactHtmlParser(module.abstract)}\r\n                                        </CardBody>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            )}\r\n                            </div>\r\n                    }\r\n\r\n                </Fragment>\r\n                :\r\n                <p className=\"text-center\">Loading...</p>\r\n                }    \r\n\r\n                <div style={{paddingTop:\"15px\", paddingBottom:\"15px\", margin:\"20px\"}} className=\"text-center\">\r\n                    <a href={`/${this.props.baseUrl.url}`}>wróć do listy szkoleń</a>\r\n                </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    async populateCourseData(lng, url) {\r\n        this.setState({ course: await clientConnectCustom('api/course/get', `${lng}/${url}`), loadingCourse: false });\r\n    }\r\n}\r\n\r\nexport default CourseDetails","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\course\\CourseList.js",["387","388","389","390","391","392","393"],"import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { clientConnectCustom } from '../../client';\r\n\r\nexport class CourseList extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            courses: [], loadingCourses: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.content)\r\n        {\r\n            this.populateCoursesData(\"78b86d1a-dc0d-4fe3-ad87-cc29deec3b45\");\r\n        }\r\n        else\r\n        {\r\n            this.populateCoursesData(\"78b86d1a-dc0d-4fe3-ad87-cc29deec3b45\", this.props.content);\r\n        }\r\n    }\r\n\r\n\r\n    renderCourses = (courses, url) => {\r\n\r\n        let inRow = 3;\r\n        let Tabs = courses.length / inRow;\r\n\r\n        let coursesList = new Array();\r\n\r\n        function renderCols(courses, tab, cols) {\r\n\r\n            let start = tab * cols;\r\n            let end = start + cols;\r\n\r\n            if (end > courses.length) {\r\n                end = courses.length;\r\n            }\r\n\r\n            var colsList = new Array();\r\n\r\n            for (let j = start; j < end; j++) {\r\n\r\n                colsList.push(\r\n                    <div className=\"col-md-4\" key={`${tab}.${j}`}>\r\n                            \r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h3>{courses[j].title}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center small\">\r\n                        {ReactHtmlParser(courses[j].abstract)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <a href={`/${url}/course/${courses[j].url}`} className=\"btn btn-secondary\">zobacz więcej...</a>\r\n                        </div>\r\n                    </div>  \r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return colsList;\r\n        }\r\n\r\n        for (let i = 0; i < Tabs; i++) {\r\n\r\n            let columnMultiply = 1;\r\n\r\n            coursesList.push(<div className=\"row justify-content-md-center\" key={i}>{renderCols(courses, i, inRow)}</div>);\r\n\r\n        }\r\n\r\n        return coursesList;\r\n    }\r\n\r\n    render() {\r\n\r\n        let courseList = this.state.loadingCourses\r\n            ? <p className=\"text-center\">Loading...</p>\r\n            : this.renderCourses(this.state.courses, this.props.baseUrl.url)\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n            \r\n            <div style={{marginTop:\"20px\", marginBottom:\"20px\", paddingTop:\"30px\"}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 xs-text-center\">\r\n                    <div className=\"h1\" style={{ textAlign: \"center\" }}>{this.props.title}</div>\r\n                    <div className=\"title-page-divider\">&nbsp;</div>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"row\">\r\n                <div className=\"col-12 xs-text-center\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {courseList}\r\n            </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    async populateCoursesData(lng, url) {\r\n        if(url)\r\n        {\r\n            this.setState({ courses: await clientConnectCustom('api/course/categorylist', `${lng}/${url}`), loadingCourses: false });\r\n        }\r\n        else\r\n        {\r\n            this.setState({ courses: await clientConnectCustom('api/course/list', lng), loadingCourses: false });\r\n        }\r\n    }\r\n}\r\n\r\nexport default CourseList","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\MessangerChat\\MessangeChat.js",["394","395"],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\messangerChat\\MessangeChat.js",["396","397"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst removeElementByIds = ids => {\r\n  ids.forEach(id => {\r\n    const element = document.getElementById(id);\r\n    if (element && element.parentNode) {\r\n      element.parentNode.removeChild(element);\r\n    }\r\n  });\r\n};\r\n\r\nexport default class MessengerCustomerChat extends Component {\r\n  static propTypes = {\r\n    pageId: PropTypes.string.isRequired,\r\n    shouldShowDialog: PropTypes.bool,\r\n    htmlRef: PropTypes.string,\r\n    minimized: PropTypes.bool,\r\n    themeColor: PropTypes.string,\r\n    loggedInGreeting: PropTypes.string,\r\n    loggedOutGreeting: PropTypes.string,\r\n    greetingDialogDisplay: PropTypes.oneOf(['show', 'hide', 'fade']),\r\n    greetingDialogDelay: PropTypes.number,\r\n    autoLogAppEvents: PropTypes.bool,\r\n    xfbml: PropTypes.bool,\r\n    version: PropTypes.string,\r\n    language: PropTypes.string,\r\n    onCustomerChatDialogShow: PropTypes.func,\r\n    onCustomerChatDialogHide: PropTypes.func,\r\n    attribution: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    appId: null,\r\n    shouldShowDialog: false,\r\n    htmlRef: undefined,\r\n    minimized: undefined,\r\n    themeColor: undefined,\r\n    loggedInGreeting: undefined,\r\n    loggedOutGreeting: undefined,\r\n    greetingDialogDisplay: undefined,\r\n    greetingDialogDelay: undefined,\r\n    autoLogAppEvents: true,\r\n    xfbml: true,\r\n    version: '9.0',\r\n    language: 'pl_PL',\r\n    onCustomerChatDialogShow: undefined,\r\n    onCustomerChatDialogHide: undefined,\r\n    attribution: undefined\r\n  };\r\n\r\n  state = {\r\n    fbLoaded: false,\r\n    shouldShowDialog: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setFbAsyncInit();\r\n    this.reloadSDKAsynchronously();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.pageId !== this.props.pageId ||\r\n      prevProps.appId !== this.props.appId ||\r\n      prevProps.shouldShowDialog !== this.props.shouldShowDialog ||\r\n      prevProps.htmlRef !== this.props.htmlRef ||\r\n      prevProps.minimized !== this.props.minimized ||\r\n      prevProps.themeColor !== this.props.themeColor ||\r\n      prevProps.loggedInGreeting !== this.props.loggedInGreeting ||\r\n      prevProps.loggedOutGreeting !== this.props.loggedOutGreeting ||\r\n      prevProps.greetingDialogDisplay !== this.props.greetingDialogDisplay ||\r\n      prevProps.greetingDialogDelay !== this.props.greetingDialogDelay ||\r\n      prevProps.autoLogAppEvents !== this.props.autoLogAppEvents ||\r\n      prevProps.xfbml !== this.props.xfbml ||\r\n      prevProps.version !== this.props.version ||\r\n      prevProps.language !== this.props.language\r\n    ) {\r\n      this.setFbAsyncInit();\r\n      this.reloadSDKAsynchronously();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window.FB !== undefined) {\r\n      window.FB.CustomerChat.hide();\r\n    }\r\n  }\r\n\r\n  setFbAsyncInit() {\r\n    const { appId, autoLogAppEvents, xfbml, version } = this.props;\r\n\r\n    window.fbAsyncInit = () => {\r\n      window.FB.init({\r\n        autoLogAppEvents,\r\n        xfbml,\r\n        version: `v${version}`,\r\n      });\r\n\r\n      this.setState({ fbLoaded: true });\r\n    };\r\n  }\r\n\r\n  loadSDKAsynchronously() {\r\n    const { language } = this.props;\r\n    /* eslint-disable */\r\n    (function(d, s, id) {\r\n      var js,\r\n        fjs = d.getElementsByTagName(s)[0];\r\n      if (d.getElementById(id)) {\r\n        return;\r\n      }\r\n      js = d.createElement(s);\r\n      js.id = id;\r\n      js.src = `https://connect.facebook.net/pl_PL/sdk/xfbml.customerchat.js`;\r\n      fjs.parentNode.insertBefore(js, fjs);\r\n    })(document, 'script', 'facebook-jssdk');\r\n    /* eslint-enable */\r\n  }\r\n\r\n  removeFacebookSDK() {\r\n    removeElementByIds(['facebook-jssdk', 'fb-root']);\r\n\r\n    delete window.FB;\r\n  }\r\n\r\n  reloadSDKAsynchronously() {\r\n    this.removeFacebookSDK();\r\n    this.loadSDKAsynchronously();\r\n  }\r\n\r\n  controlPlugin() {\r\n    const { shouldShowDialog } = this.props;\r\n\r\n    if (shouldShowDialog) {\r\n      window.FB.CustomerChat.showDialog();\r\n    } else {\r\n      window.FB.CustomerChat.hideDialog();\r\n    }\r\n  }\r\n\r\n  subscribeEvents() {\r\n    const { onCustomerChatDialogShow, onCustomerChatDialogHide } = this.props;\r\n\r\n    if (onCustomerChatDialogShow) {\r\n      window.FB.Event.subscribe(\r\n        'customerchat.dialogShow',\r\n        onCustomerChatDialogShow\r\n      );\r\n    }\r\n\r\n    if (onCustomerChatDialogHide) {\r\n      window.FB.Event.subscribe(\r\n        'customerchat.dialogHide',\r\n        onCustomerChatDialogHide\r\n      );\r\n    }\r\n  }\r\n\r\n  createMarkup() {\r\n    const {\r\n      pageId,\r\n      htmlRef,\r\n      minimized,\r\n      themeColor,\r\n      loggedInGreeting,\r\n      loggedOutGreeting,\r\n      greetingDialogDisplay,\r\n      greetingDialogDelay,\r\n      attribution\r\n    } = this.props;\r\n\r\n    const refAttribute = htmlRef !== undefined ? `ref=\"${htmlRef}\"` : '';\r\n    const minimizedAttribute =\r\n      minimized !== undefined ? `minimized=\"${minimized}\"` : '';\r\n    const themeColorAttribute =\r\n      themeColor !== undefined ? `theme_color=\"${themeColor}\"` : '';\r\n    const loggedInGreetingAttribute =\r\n      loggedInGreeting !== undefined\r\n        ? `logged_in_greeting=\"${loggedInGreeting}\"`\r\n        : '';\r\n    const loggedOutGreetingAttribute =\r\n      loggedOutGreeting !== undefined\r\n        ? `logged_out_greeting=\"${loggedOutGreeting}\"`\r\n        : '';\r\n    const greetingDialogDisplayAttribute =\r\n      greetingDialogDisplay !== undefined\r\n        ? `greeting_dialog_display=\"${greetingDialogDisplay}\"`\r\n        : '';\r\n    const greetingDialogDelayAttribute =\r\n      greetingDialogDelay !== undefined\r\n        ? `greeting_dialog_delay=\"${greetingDialogDelay}\"`\r\n        : '';\r\n    const attributionAttribute =\r\n        attribution !== undefined ? `attribution=\"${attribution}\"` : '';\r\n    return {\r\n      __html: `<div\r\n        class=\"fb-customerchat\"\r\n        page_id=\"${pageId}\"\r\n        ${refAttribute}\r\n        ${minimizedAttribute}\r\n        ${themeColorAttribute}\r\n        ${loggedInGreetingAttribute}\r\n        ${loggedOutGreetingAttribute}\r\n        ${greetingDialogDisplayAttribute}\r\n        ${greetingDialogDelayAttribute}\r\n        ${attributionAttribute}\r\n      ></div>`,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { fbLoaded, shouldShowDialog } = this.state;\r\n\r\n    if (fbLoaded && shouldShowDialog !== this.props.shouldShowDialog) {\r\n      document.addEventListener(\r\n        'DOMNodeInserted',\r\n        event => {\r\n          const element = event.target;\r\n          if (\r\n            element.className &&\r\n            typeof element.className === 'string' &&\r\n            element.className.includes('fb_dialog')\r\n          ) {\r\n            this.controlPlugin();\r\n          }\r\n        },\r\n        false\r\n      );\r\n      this.subscribeEvents();\r\n    }\r\n    // Add a random key to rerender. Reference:\r\n    // https://stackoverflow.com/questions/30242530/dangerouslysetinnerhtml-doesnt-update-during-render\r\n    return <div key={Date()} dangerouslySetInnerHTML={this.createMarkup()} />;\r\n  }\r\n}","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\calendar\\Calendar.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\shared\\TopNavUE.js",[],"C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\news\\NewsDetails.js",["398","399","400","401"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport { clientConnect } from \"../../client\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport class NewsDetails extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      news: [],\r\n      loadingNews: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateNewsData(this.props.news);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div style={{ marginTop: \"20px\", marginBottom: \"20px\", paddingTop: \"30px\" }}>\r\n          {!this.state.loadingNews ? (\r\n            <Fragment>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 xs-text-center\">\r\n                  <div className=\"h1\" style={{ textAlign: \"center\" }}>\r\n                    {this.state.news.title}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {this.state.news.hasImageFull && (\r\n                <img\r\n                  src={`https://cdn.bluebirdcms.net/imageasset/get/${this.state.news.imageAssetFullHash}`}\r\n                  alt={this.state.news.title}\r\n                  className=\"img-fluid\"\r\n                />\r\n              )}\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col-md-12\">{ReactHtmlParser(this.state.news.content)}</div>\r\n              </div>\r\n              {this.state.news.newsShowDate === true && (\r\n                <p class=\"small\">\r\n                  Published:&nbsp;<Moment format=\"DD.MM.YYYY\">{this.state.news.newsDate}</Moment>\r\n                </p>\r\n              )}\r\n              <hr />\r\n              <div style={{ paddingTop: \"15px\", paddingBottom: \"15px\", margin: \"20px\" }} className=\"text-center\">\r\n                <a href={`/${this.props.baseUrl.url}`}>wróć do listy</a>\r\n              </div>\r\n            </Fragment>\r\n          ) : (\r\n            <p className=\"text-center\">Loading...</p>\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  async populateNewsData(url) {\r\n    this.setState({ news: await clientConnect(\"api/news/get\", url), loadingNews: false });\r\n  }\r\n}\r\n\r\nexport default NewsDetails;\r\n","C:\\Users\\JakubLeszczyński\\source\\BitBucket\\lewiatan-wmr\\src\\components\\news\\NewsList.js",["402","403","404","405","406"],"import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from \"react-html-parser\";\r\nimport { clientConnect } from \"../../client\";\r\nimport Moment from \"react-moment\";\r\n\r\nexport class NewsList extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      news: [],\r\n      loadingNews: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.content) {\r\n      this.populateNewsData();\r\n    } else {\r\n      this.populateNewsData(this.props.content.url);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var newsTails = [];\r\n\r\n    if (this.state.news.length > 1 && this.state.news.length >= 4) {\r\n      for (let i = 1; i < 4; i++) {\r\n        newsTails.push(\r\n          <div className=\"col-md-4\">\r\n            <p>\r\n              {this.state.news[i].hasImage && (\r\n                <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`}>\r\n                  <img\r\n                    src={`https://cdn.bluebirdcms.net/imageasset/get/${this.state.news[i].imageAssetHash}`}\r\n                    alt={this.state.news[i].title}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </a>\r\n              )}\r\n            </p>\r\n            <h3>\r\n              <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`}>{this.state.news[i].title}</a>\r\n            </h3>\r\n            {ReactHtmlParser(this.state.news[i].abstract)}\r\n            <p>\r\n              <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`} className=\"btn btn-default\">\r\n                czytaj więcej...\r\n              </a>\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.state.news.length > 1 && this.state.news.length < 4) {\r\n      for (let i = 1; i < this.state.news.length; i++) {\r\n        newsTails.push(\r\n          <div className=\"col-md-4\">\r\n            <p>\r\n              {this.state.news[i].hasImage && (\r\n                <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`}>\r\n                  <img\r\n                    src={`https://cdn.bluebirdcms.net/imageasset/get/${this.state.news[i].imageAssetHash}`}\r\n                    alt={this.state.news[i].title}\r\n                    className=\"img-fluid\"\r\n                  />\r\n                </a>\r\n              )}\r\n            </p>\r\n            <h3>\r\n              <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`}>{this.state.news[i].title}</a>\r\n            </h3>\r\n            {ReactHtmlParser(this.state.news[i].abstract)}\r\n            <p>\r\n              <a href={`/${this.props.baseUrl.url}/news/${this.state.news[i].url}`} className=\"btn btn-default\">\r\n                czytaj więcej...\r\n              </a>\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    var newsList = [];\r\n\r\n    if (this.state.news.length >= 5) {\r\n      for (let j = 4; j < this.state.news.length; j++) {\r\n        newsList.push(\r\n          <div style={{ borderBottom: \"1px solid #051E38\", paddingTop: \"15px\", paddingBottom: \"15px\" }} key={j}>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <h3>\r\n                  <a href={`/${this.props.baseUrl.url}/news/${this.state.news[j].url}`}>{this.state.news[j].title}</a>\r\n                </h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          {!this.state.loadingEvents ? (\r\n            <Fragment>\r\n              {this.state.news.length > 0 ? (\r\n                <Fragment>\r\n                  <div className=\"row\">\r\n                    {this.state.news[0].hasImage && (\r\n                      <div className=\"col-md-6\">\r\n                        <a href={`/${this.props.baseUrl.url}/news/${this.state.news[0].url}`}>\r\n                          <img\r\n                            src={`https://cdn.bluebirdcms.net/imageasset/get/${this.state.news[0].imageAssetHash}`}\r\n                            alt={this.state.news[0].title}\r\n                            className=\"img-fluid\"\r\n                          />\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                    <div className={this.state.news[0].hasImage ? `col-md-6` : `col-md-12`}>\r\n                      <h3>\r\n                        <a href={`/${this.props.baseUrl.url}/news/${this.state.news[0].url}`}>{this.state.news[0].title}</a>\r\n                      </h3>\r\n                      {ReactHtmlParser(this.state.news[0].abstract)}\r\n                      <p>\r\n                        <a href={`/${this.props.baseUrl.url}/news/${this.state.news[0].url}`} className=\"btn btn-default\">\r\n                          czytaj więcej...\r\n                        </a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"row\">{newsTails}</div>\r\n\r\n                  <div className=\"row\">{newsList}</div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <p className=\"text-center\" style={{ fontSize: \"52px\" }}>{`{...}`}</p>\r\n                  <p className=\"text-center\">brak aktualności</p>\r\n                </Fragment>\r\n              )}\r\n            </Fragment>\r\n          ) : (\r\n            <p className=\"text-center\">Loading...</p>\r\n          )}\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  async populateNewsData(url) {\r\n    if (url) {\r\n      this.setState({ news: await clientConnect(\"api/news/categorylist\", url), loadingNews: false });\r\n    } else {\r\n      this.setState({ news: await clientConnect(\"api/news/list\", url), loadingNews: false });\r\n    }\r\n  }\r\n}\r\n\r\nexport default NewsList;\r\n",{"ruleId":"407","replacedBy":"408"},{"ruleId":"409","replacedBy":"410"},{"ruleId":"411","severity":1,"message":"412","line":8,"column":8,"nodeType":"413","messageId":"414","endLine":8,"endColumn":15},{"ruleId":"415","severity":1,"message":"416","line":58,"column":4,"nodeType":"417","endLine":58,"endColumn":14,"suggestions":"418"},{"ruleId":"411","severity":1,"message":"419","line":11,"column":8,"nodeType":"413","messageId":"414","endLine":11,"endColumn":17},{"ruleId":"411","severity":1,"message":"420","line":14,"column":10,"nodeType":"413","messageId":"414","endLine":14,"endColumn":19},{"ruleId":"411","severity":1,"message":"421","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":2,"column":27,"nodeType":"413","messageId":"414","endLine":2,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":2,"column":41,"nodeType":"413","messageId":"414","endLine":2,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":2,"column":63,"nodeType":"413","messageId":"414","endLine":2,"endColumn":74},{"ruleId":"411","severity":1,"message":"425","line":13,"column":21,"nodeType":"413","messageId":"414","endLine":13,"endColumn":24},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"430"},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":5,"column":27,"nodeType":"413","messageId":"414","endLine":5,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":5,"column":41,"nodeType":"413","messageId":"414","endLine":5,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":5,"column":63,"nodeType":"413","messageId":"414","endLine":5,"endColumn":74},{"ruleId":"431","severity":1,"message":"432","line":44,"column":45,"nodeType":"433","messageId":"429","endLine":44,"endColumn":47},{"ruleId":"411","severity":1,"message":"434","line":2,"column":10,"nodeType":"413","messageId":"414","endLine":2,"endColumn":16},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"435"},{"ruleId":"411","severity":1,"message":"436","line":3,"column":47,"nodeType":"413","messageId":"414","endLine":3,"endColumn":53},{"ruleId":"411","severity":1,"message":"437","line":4,"column":10,"nodeType":"413","messageId":"414","endLine":4,"endColumn":18},{"ruleId":"411","severity":1,"message":"438","line":4,"column":52,"nodeType":"413","messageId":"414","endLine":4,"endColumn":65},{"ruleId":"411","severity":1,"message":"439","line":4,"column":67,"nodeType":"413","messageId":"414","endLine":4,"endColumn":74},{"ruleId":"411","severity":1,"message":"440","line":4,"column":76,"nodeType":"413","messageId":"414","endLine":4,"endColumn":83},{"ruleId":"411","severity":1,"message":"441","line":5,"column":9,"nodeType":"413","messageId":"414","endLine":5,"endColumn":20},{"ruleId":"411","severity":1,"message":"442","line":5,"column":22,"nodeType":"413","messageId":"414","endLine":5,"endColumn":28},{"ruleId":"411","severity":1,"message":"443","line":5,"column":30,"nodeType":"413","messageId":"414","endLine":5,"endColumn":36},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"444"},{"ruleId":"411","severity":1,"message":"445","line":1,"column":28,"nodeType":"413","messageId":"414","endLine":1,"endColumn":36},{"ruleId":"411","severity":1,"message":"446","line":3,"column":10,"nodeType":"413","messageId":"414","endLine":3,"endColumn":14},{"ruleId":"411","severity":1,"message":"436","line":5,"column":47,"nodeType":"413","messageId":"414","endLine":5,"endColumn":53},{"ruleId":"411","severity":1,"message":"447","line":6,"column":8,"nodeType":"413","messageId":"414","endLine":6,"endColumn":16},{"ruleId":"431","severity":1,"message":"432","line":72,"column":50,"nodeType":"433","messageId":"429","endLine":72,"endColumn":52},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"448"},{"ruleId":"431","severity":1,"message":"449","line":8,"column":31,"nodeType":"433","messageId":"429","endLine":8,"endColumn":33},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"450"},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"431","severity":1,"message":"432","line":20,"column":54,"nodeType":"433","messageId":"429","endLine":20,"endColumn":56},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"451"},{"ruleId":"411","severity":1,"message":"421","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"452"},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"431","severity":1,"message":"432","line":20,"column":54,"nodeType":"433","messageId":"429","endLine":20,"endColumn":56},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"453"},{"ruleId":"411","severity":1,"message":"421","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"454"},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"431","severity":1,"message":"432","line":20,"column":54,"nodeType":"433","messageId":"429","endLine":20,"endColumn":56},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"455"},{"ruleId":"411","severity":1,"message":"421","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":2,"column":27,"nodeType":"413","messageId":"414","endLine":2,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":2,"column":41,"nodeType":"413","messageId":"414","endLine":2,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":2,"column":63,"nodeType":"413","messageId":"414","endLine":2,"endColumn":74},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"456"},{"ruleId":"411","severity":1,"message":"457","line":2,"column":34,"nodeType":"413","messageId":"414","endLine":2,"endColumn":49},{"ruleId":"411","severity":1,"message":"458","line":2,"column":71,"nodeType":"413","messageId":"414","endLine":2,"endColumn":86},{"ruleId":"411","severity":1,"message":"421","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":2,"column":27,"nodeType":"413","messageId":"414","endLine":2,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":2,"column":41,"nodeType":"413","messageId":"414","endLine":2,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":2,"column":63,"nodeType":"413","messageId":"414","endLine":2,"endColumn":74},{"ruleId":"459","severity":1,"message":"460","line":59,"column":27,"nodeType":"461","messageId":"462","endLine":59,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":62,"column":27,"nodeType":"461","messageId":"462","endLine":62,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":65,"column":27,"nodeType":"461","messageId":"462","endLine":65,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":68,"column":27,"nodeType":"461","messageId":"462","endLine":68,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":71,"column":27,"nodeType":"461","messageId":"462","endLine":71,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":74,"column":27,"nodeType":"461","messageId":"462","endLine":74,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":77,"column":27,"nodeType":"461","messageId":"462","endLine":77,"endColumn":33},{"ruleId":"459","severity":1,"message":"460","line":80,"column":27,"nodeType":"461","messageId":"462","endLine":80,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":95,"column":87,"nodeType":"433","messageId":"429","endLine":95,"endColumn":89},{"ruleId":"459","severity":1,"message":"460","line":112,"column":29,"nodeType":"461","messageId":"462","endLine":112,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":115,"column":29,"nodeType":"461","messageId":"462","endLine":115,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":118,"column":29,"nodeType":"461","messageId":"462","endLine":118,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":121,"column":29,"nodeType":"461","messageId":"462","endLine":121,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":124,"column":29,"nodeType":"461","messageId":"462","endLine":124,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":127,"column":29,"nodeType":"461","messageId":"462","endLine":127,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":130,"column":29,"nodeType":"461","messageId":"462","endLine":130,"endColumn":35},{"ruleId":"459","severity":1,"message":"460","line":133,"column":29,"nodeType":"461","messageId":"462","endLine":133,"endColumn":35},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"463"},{"ruleId":"464","severity":1,"message":"465","line":5,"column":1,"nodeType":"466","endLine":117,"endColumn":3},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"467"},{"ruleId":"464","severity":1,"message":"468","line":1,"column":1,"nodeType":"466","endLine":99,"endColumn":3},{"ruleId":"426","severity":1,"message":"427","line":1,"column":1,"nodeType":"428","messageId":"429","fix":"469"},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"470","line":65,"column":9,"nodeType":"413","messageId":"414","endLine":65,"endColumn":12},{"ruleId":"471","severity":1,"message":"472","line":80,"column":34,"nodeType":"473","endLine":80,"endColumn":49},{"ruleId":"471","severity":1,"message":"472","line":92,"column":36,"nodeType":"473","endLine":92,"endColumn":51},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"470","line":35,"column":13,"nodeType":"413","messageId":"414","endLine":35,"endColumn":16},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"474","severity":1,"message":"475","line":80,"column":33,"nodeType":"476","endLine":80,"endColumn":73},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"421","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"421","line":3,"column":8,"nodeType":"413","messageId":"414","endLine":3,"endColumn":23},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"431","severity":1,"message":"432","line":54,"column":116,"nodeType":"433","messageId":"429","endLine":54,"endColumn":118},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"477","severity":1,"message":"478","line":32,"column":27,"nodeType":"479","messageId":"480","endLine":32,"endColumn":38},{"ruleId":"477","severity":1,"message":"478","line":43,"column":28,"nodeType":"479","messageId":"480","endLine":43,"endColumn":39},{"ruleId":"411","severity":1,"message":"481","line":75,"column":17,"nodeType":"413","messageId":"414","endLine":75,"endColumn":31},{"ruleId":"411","severity":1,"message":"482","line":91,"column":13,"nodeType":"413","messageId":"414","endLine":91,"endColumn":18},{"ruleId":"411","severity":1,"message":"483","line":105,"column":13,"nodeType":"413","messageId":"414","endLine":105,"endColumn":21},{"ruleId":"411","severity":1,"message":"482","line":91,"column":13,"nodeType":"413","messageId":"414","endLine":91,"endColumn":18},{"ruleId":"411","severity":1,"message":"483","line":105,"column":13,"nodeType":"413","messageId":"414","endLine":105,"endColumn":21},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"419","line":2,"column":8,"nodeType":"413","messageId":"414","endLine":2,"endColumn":17},{"ruleId":"411","severity":1,"message":"422","line":3,"column":27,"nodeType":"413","messageId":"414","endLine":3,"endColumn":39},{"ruleId":"411","severity":1,"message":"423","line":3,"column":41,"nodeType":"413","messageId":"414","endLine":3,"endColumn":61},{"ruleId":"411","severity":1,"message":"424","line":3,"column":63,"nodeType":"413","messageId":"414","endLine":3,"endColumn":74},{"ruleId":"411","severity":1,"message":"484","line":5,"column":8,"nodeType":"413","messageId":"414","endLine":5,"endColumn":14},"no-native-reassign",["485"],"no-negated-in-lhs",["486"],"no-unused-vars","'ReactGA' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hash'. Either include it or remove the dependency array.","ArrayExpression",["487"],"'PropTypes' is defined but never used.","'Container' is defined but never used.","'ReactHtmlParser' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'Row' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"488","text":"489"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'Helmet' is defined but never used.",{"range":"490","text":"489"},"'scroll' is defined but never used.","'Collapse' is defined but never used.","'NavbarToggler' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'accessToken' is defined but never used.","'siteId' is defined but never used.","'apiUrl' is defined but never used.",{"range":"491","text":"489"},"'Fragment' is defined but never used.","'Link' is defined but never used.","'TopNavEU' is defined but never used.",{"range":"492","text":"489"},"Expected '!==' and instead saw '!='.",{"range":"493","text":"489"},{"range":"494","text":"489"},{"range":"495","text":"489"},{"range":"496","text":"489"},{"range":"497","text":"489"},{"range":"498","text":"489"},{"range":"499","text":"489"},"'CarouselControl' is defined but never used.","'CarouselCaption' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",{"range":"500","text":"489"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"501","text":"489"},"Assign object to a variable before exporting as module default",{"range":"502","text":"489"},"'url' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'columnMultiply' is assigned a value but never used.","'appId' is assigned a value but never used.","'language' is assigned a value but never used.","'Moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"503","fix":"504"},[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],"Update the dependencies array to be: [hash, pathname]",{"range":"505","text":"506"},[1660,1670],"[hash, pathname]"]